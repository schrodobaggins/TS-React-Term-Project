{"ast":null,"code":"var _jsxFileName = \"/Users/michaelschroeder/Documents/GitHub/final-project-symphony-quadtuplets/client/src/SideNav.tsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$(),\n    _s4 = $RefreshSig$(),\n    _s5 = $RefreshSig$(),\n    _s6 = $RefreshSig$();\n\n// 3rd party library imports\nimport classNames from 'classnames';\nimport { List } from 'immutable';\nimport React from 'react';\nimport { useLocation, Link } from 'react-router-dom';\nimport { RadioButton20, RadioButtonChecked20, Music20, TrashCan20, OverflowMenuHorizontal20 } from '@carbon/icons-react'; // project imports\n\nimport { DispatchAction } from './Reducer';\nimport './css/ud-menu.css';\nimport './css/recording_button.css';\nimport { getSong, updateSong, deleteSong, getSongs } from './utils/apiCreators';\n/** ------------------------------------------------------------------------ **\n * All the components in the side navigation.\n ** ------------------------------------------------------------------------ */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Section = _ref => {\n  let {\n    title,\n    children\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-column h-25 bb b--light-gray pa3\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fw7 mb2\",\n      children: [title, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-auto overflow-auto\",\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Section;\n\nfunction RadioButton(_ref2) {\n  let {\n    to,\n    text,\n    active,\n    onClick\n  } = _ref2;\n  return /*#__PURE__*/_jsxDEV(Link, {\n    to: to,\n    className: \"no-underline\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classNames('f7 flex items-center black', {\n        fw7: active\n      }),\n      onClick: onClick,\n      children: [active ? /*#__PURE__*/_jsxDEV(RadioButtonChecked20, {\n        className: \"mr1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(RadioButton20, {\n        className: \"mr1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dim\",\n        children: text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n}\n\n_c2 = RadioButton;\n\nfunction RecordingButton(_ref3) {\n  let {\n    isRecording,\n    onClick\n  } = _ref3;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"recording-buttons\",\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"recording-button\",\n      onClick: onClick,\n      children: isRecording ? \"Stop\" : \"Record\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this);\n}\n\n_c3 = RecordingButton;\n\nfunction UpdateAndDeleteButton(_ref4) {\n  _s();\n\n  let {\n    state,\n    dispatch,\n    songId,\n    isShowingUD\n  } = _ref4;\n  const [newTitle, setNewTitle] = React.useState('');\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (songId) await updateSong(dispatch, newTitle, songId);\n    setNewTitle('');\n  };\n\n  const handleDelete = async () => {\n    if (songId) await deleteSong(dispatch, songId);\n  };\n\n  const handleTitleChange = e => setNewTitle(e.target.value);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ud-menu\",\n    children: isShowingUD && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ud-menu-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"update-form\",\n        onSubmit: handleSubmit,\n        children: /*#__PURE__*/_jsxDEV(\"fieldset\", {\n          className: \"update-form-fieldset\",\n          children: /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              value: newTitle,\n              onChange: handleTitleChange,\n              type: \"text\",\n              placeholder: \"Edit the song title\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"submit\",\n              hidden: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(TrashCan20, {\n        className: \"delete-icon dim\",\n        onClick: handleDelete\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 5\n  }, this);\n}\n\n_s(UpdateAndDeleteButton, \"yDL3i1zGI9aikOUmkxVbx2jwqbI=\");\n\n_c4 = UpdateAndDeleteButton;\n\nfunction Instruments(_ref5) {\n  _s2();\n\n  var _state$get;\n\n  let {\n    state\n  } = _ref5;\n  const instruments = state.get('instruments');\n  const activeInstrument = (_state$get = state.get('instrument')) === null || _state$get === void 0 ? void 0 : _state$get.name;\n  const location = useLocation();\n  return /*#__PURE__*/_jsxDEV(Section, {\n    title: \"Instruments\",\n    children: instruments.map(i => /*#__PURE__*/_jsxDEV(RadioButton, {\n      to: `/${i.name}${location.search}`,\n      text: i.name,\n      active: i.name === activeInstrument,\n      onClick: () => console.log(i.name)\n    }, i.name, false, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 145,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(Instruments, \"pkHmaVRPskBaU4tMJuJJpV42k1I=\", false, function () {\n  return [useLocation];\n});\n\n_c5 = Instruments;\n\nfunction Visualizers(_ref6) {\n  _s3();\n\n  var _state$get2;\n\n  let {\n    state\n  } = _ref6;\n  const visualizers = state.get('visualizers');\n  const activeVisualizer = (_state$get2 = state.get('visualizer')) === null || _state$get2 === void 0 ? void 0 : _state$get2.name;\n  const location = useLocation();\n  return /*#__PURE__*/_jsxDEV(Section, {\n    title: \"Visualizers\",\n    children: visualizers.map(v => /*#__PURE__*/_jsxDEV(RadioButton, {\n      to: {\n        pathname: location.pathname,\n        search: `?visualizer=${v.name}`\n      },\n      text: v.name,\n      active: v.name === activeVisualizer,\n      onClick: () => console.log(v.name)\n    }, v.name, false, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 165,\n    columnNumber: 5\n  }, this);\n}\n\n_s3(Visualizers, \"pkHmaVRPskBaU4tMJuJJpV42k1I=\", false, function () {\n  return [useLocation];\n});\n\n_c6 = Visualizers;\n\nfunction Search(_ref7) {\n  let {\n    handleSearchChange\n  } = _ref7;\n\n  const handleSubmit = e => {\n    e.preventDefault();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: /*#__PURE__*/_jsxDEV(\"fieldset\", {\n      className: \"form-fieldset\",\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"search\",\n          onChange: handleSearchChange,\n          placeholder: \"Search\",\n          autoComplete: \"off\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          hidden: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 188,\n    columnNumber: 5\n  }, this);\n}\n\n_c7 = Search;\n\nfunction Song(_ref8) {\n  _s4();\n\n  let {\n    state,\n    dispatch,\n    songId,\n    song\n  } = _ref8;\n  // UD is an abbreviation for update/delete \n  const [isShowingUD, setIsShowingUD] = React.useState(false);\n  return song !== undefined ? /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"song-wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"inline-flex w-100\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"f7 pointer song underline no-underline i\",\n        onClick: () => dispatch(new DispatchAction('PLAY_SONG', {\n          id: song.get('id')\n        })),\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"song-content dim\",\n          children: [/*#__PURE__*/_jsxDEV(Music20, {\n            className: \"mr1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 15\n          }, this), song.get('songTitle')]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 13\n        }, this)\n      }, song.get('id'), false, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"overflow-menu\",\n        children: /*#__PURE__*/_jsxDEV(OverflowMenuHorizontal20, {\n          onClick: () => setIsShowingUD(!isShowingUD),\n          className: \"dim\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(UpdateAndDeleteButton, {\n      state: state,\n      dispatch: dispatch,\n      songId: songId,\n      isShowingUD: isShowingUD\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 212,\n    columnNumber: 7\n  }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: \" \"\n  }, void 0, false);\n}\n\n_s4(Song, \"kygBlNaX61VPiX6liai3Zdpe7Zo=\");\n\n_c8 = Song;\n\nfunction Songs(_ref9) {\n  let {\n    state,\n    dispatch,\n    searchTerm\n  } = _ref9;\n  const songs = state.get('songs', List());\n  return /*#__PURE__*/_jsxDEV(Section, {\n    title: \"Playlist\",\n    children: songs.filter(song => song.get('songTitle').includes(searchTerm)).map(song => {\n      const songId = song.get('id');\n      return /*#__PURE__*/_jsxDEV(Song, {\n        state: state,\n        dispatch: dispatch,\n        song: song,\n        songId: songId\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 244,\n    columnNumber: 5\n  }, this);\n}\n\n_c9 = Songs;\n\nfunction RecordingButtons(_ref10) {\n  _s5();\n\n  let {\n    state,\n    dispatch\n  } = _ref10;\n  const isRecording = state.get('isRecording');\n  const openPopup = state.get('openPopup');\n  const [startRecording, setStartRecording] = React.useState(false);\n  const [stopRecording, setStopRecording] = React.useState(false);\n  return /*#__PURE__*/_jsxDEV(Section, {\n    title: \"Record a Song\",\n    children: [/*#__PURE__*/_jsxDEV(RecordingButton, {\n      onClick: () => {\n        // notify redux and update state for whether the user is recording or not \n        dispatch(new DispatchAction('TRIGGER_RECORDING', {\n          isRecording: isRecording\n        })); // create some sort of condition here if isRecording is set to true\n\n        if (!state.get('isRecording')) {\n          setStartRecording(true); // notify redux that a new song should be created\n          // a song should simply hold a list of the notes clicked by the user \n\n          dispatch(new DispatchAction('RECORD_A_SONG', {\n            song: []\n          }));\n        } else {\n          // stop recording a song and add song to db\n          setStartRecording(false);\n          setStopRecording(true);\n          setTimeout(() => {\n            setStopRecording(false);\n          }, 3000); // if a recording is stopped, then open the popup menu where the song title will be input\n\n          dispatch(new DispatchAction('TRIGGER_RECORDING_POPUP', {\n            openPopup: openPopup\n          }));\n        }\n      },\n      isRecording: isRecording\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"recording-button-message-wrapper\",\n      children: [startRecording && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"recording-button-message\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"blinking-record-icon\",\n          children: \"  \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 303,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \" Your recording is live \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 304,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 11\n      }, this), stopRecording && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \" Your recording has stopped \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 307,\n        columnNumber: 27\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 265,\n    columnNumber: 5\n  }, this);\n}\n\n_s5(RecordingButtons, \"8gGWFdazbHlXZUW3PU3kDMV7tr0=\");\n\n_c10 = RecordingButtons;\nexport function SideNav(_ref11) {\n  _s6();\n\n  let {\n    state,\n    dispatch\n  } = _ref11;\n  const [searchTerm, setSearchTerm] = React.useState('');\n\n  const handleSearchChange = async e => {\n    if (e.target.value === '') {\n      // clear searched songs from state\n      await getSongs(dispatch);\n      setSearchTerm('');\n      return;\n    }\n\n    if (searchTerm.includes(e.target.value)) {\n      // if the new search value is already in search term, another API is not necessary\n      setSearchTerm(e.target.value);\n      return;\n    }\n\n    await getSong(dispatch, e.target.value);\n    setSearchTerm('');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"absolute top-0 left-0 bottom-0 w5 z-1 shadow-1 bg-white flex flex-column\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"h3 fw7 f5 flex items-center pl3 bb b--light-gray\",\n      children: \"Quadtuplets\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 336,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-auto\",\n      children: [/*#__PURE__*/_jsxDEV(Instruments, {\n        state: state,\n        dispatch: dispatch\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 340,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Visualizers, {\n        state: state,\n        dispatch: dispatch\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 341,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Search, {\n        handleSearchChange: handleSearchChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 342,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Songs, {\n        state: state,\n        dispatch: dispatch,\n        searchTerm: searchTerm\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 343,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(RecordingButtons, {\n        state: state,\n        dispatch: dispatch\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 344,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 339,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 335,\n    columnNumber: 5\n  }, this);\n}\n\n_s6(SideNav, \"a1cMJ8t0eYFnsCEdGcHtaGJdbCM=\");\n\n_c11 = SideNav;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10, _c11;\n\n$RefreshReg$(_c, \"Section\");\n$RefreshReg$(_c2, \"RadioButton\");\n$RefreshReg$(_c3, \"RecordingButton\");\n$RefreshReg$(_c4, \"UpdateAndDeleteButton\");\n$RefreshReg$(_c5, \"Instruments\");\n$RefreshReg$(_c6, \"Visualizers\");\n$RefreshReg$(_c7, \"Search\");\n$RefreshReg$(_c8, \"Song\");\n$RefreshReg$(_c9, \"Songs\");\n$RefreshReg$(_c10, \"RecordingButtons\");\n$RefreshReg$(_c11, \"SideNav\");","map":{"version":3,"sources":["/Users/michaelschroeder/Documents/GitHub/final-project-symphony-quadtuplets/client/src/SideNav.tsx"],"names":["classNames","List","React","useLocation","Link","RadioButton20","RadioButtonChecked20","Music20","TrashCan20","OverflowMenuHorizontal20","DispatchAction","getSong","updateSong","deleteSong","getSongs","Section","title","children","RadioButton","to","text","active","onClick","fw7","RecordingButton","isRecording","UpdateAndDeleteButton","state","dispatch","songId","isShowingUD","newTitle","setNewTitle","useState","handleSubmit","e","preventDefault","handleDelete","handleTitleChange","target","value","Instruments","instruments","get","activeInstrument","name","location","map","i","search","console","log","Visualizers","visualizers","activeVisualizer","v","pathname","Search","handleSearchChange","Song","song","setIsShowingUD","undefined","id","Songs","searchTerm","songs","filter","includes","RecordingButtons","openPopup","startRecording","setStartRecording","stopRecording","setStopRecording","setTimeout","SideNav","setSearchTerm"],"mappings":";;;;;;;;AAAA;AACA,OAAOA,UAAP,MAAuB,YAAvB;AACA,SAASC,IAAT,QAA0B,WAA1B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,EAAsBC,IAAtB,QAAkC,kBAAlC;AACA,SACEC,aADF,EAEEC,oBAFF,EAGEC,OAHF,EAIEC,UAJF,EAKEC,wBALF,QAMO,qBANP,C,CAQA;;AACA,SAASC,cAAT,QAA+B,WAA/B;AAIA,OAAO,mBAAP;AACA,OAAO,4BAAP;AACA,SAASC,OAAT,EAAkBC,UAAlB,EAA8BC,UAA9B,EAA0CC,QAA1C,QAA0D,qBAA1D;AAEA;AACA;AACA;;;;;AAgBA,MAAMC,OAAoC,GAAG,QAAyB;AAAA,MAAxB;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT,GAAwB;AACpE,sBACE;AAAK,IAAA,SAAS,EAAC,4CAAf;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA,iBAA0BD,KAA1B;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAK,MAAA,SAAS,EAAC,yBAAf;AAAA,gBAA0CC;AAA1C;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD,CAPD;;KAAMF,O;;AAuBN,SAASG,WAAT,QAAmF;AAAA,MAA9D;AAAEC,IAAAA,EAAF;AAAMC,IAAAA,IAAN;AAAYC,IAAAA,MAAZ;AAAoBC,IAAAA;AAApB,GAA8D;AACjF,sBACE,QAAC,IAAD;AAAM,IAAA,EAAE,EAAEH,EAAV;AAAc,IAAA,SAAS,EAAC,cAAxB;AAAA,2BACE;AACE,MAAA,SAAS,EAAEnB,UAAU,CAAC,4BAAD,EAA+B;AAAEuB,QAAAA,GAAG,EAAEF;AAAP,OAA/B,CADvB;AAEE,MAAA,OAAO,EAAEC,OAFX;AAAA,iBAIGD,MAAM,gBACL,QAAC,oBAAD;AAAsB,QAAA,SAAS,EAAC;AAAhC;AAAA;AAAA;AAAA;AAAA,cADK,gBAGL,QAAC,aAAD;AAAe,QAAA,SAAS,EAAC;AAAzB;AAAA;AAAA;AAAA;AAAA,cAPJ,eASE;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA,kBAAsBD;AAAtB;AAAA;AAAA;AAAA;AAAA,cATF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAeD;;MAhBQF,W;;AAkBT,SAASM,eAAT,QAAsF;AAAA,MAA7D;AAAEC,IAAAA,WAAF;AAAeH,IAAAA;AAAf,GAA6D;AACpF,sBACE;AAAK,IAAA,SAAS,EAAC,mBAAf;AAAA,2BACE;AAAQ,MAAA,SAAS,EAAC,kBAAlB;AAAqC,MAAA,OAAO,EAAEA,OAA9C;AAAA,gBACGG,WAAW,GAAG,MAAH,GAAY;AAD1B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAOD;;MARQD,e;;AAUT,SAASE,qBAAT,QAAkG;AAAA;;AAAA,MAAnE;AAACC,IAAAA,KAAD;AAAQC,IAAAA,QAAR;AAAkBC,IAAAA,MAAlB;AAA0BC,IAAAA;AAA1B,GAAmE;AAEhG,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0B9B,KAAK,CAAC+B,QAAN,CAAe,EAAf,CAAhC;;AAEA,QAAMC,YAAY,GAAG,MAAOC,CAAP,IAAiD;AACpEA,IAAAA,CAAC,CAACC,cAAF;AAEA,QAAGP,MAAH,EACE,MAAMjB,UAAU,CAACgB,QAAD,EAAWG,QAAX,EAAqBF,MAArB,CAAhB;AAEFG,IAAAA,WAAW,CAAC,EAAD,CAAX;AACD,GAPD;;AASA,QAAMK,YAAY,GAAG,YAAY;AAC/B,QAAGR,MAAH,EACE,MAAMhB,UAAU,CAACe,QAAD,EAAWC,MAAX,CAAhB;AACH,GAHD;;AAKA,QAAMS,iBAAiB,GAAIH,CAAD,IAA4CH,WAAW,CAACG,CAAC,CAACI,MAAF,CAASC,KAAV,CAAjF;;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA,cACIV,WAAW,iBACX;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA,8BACE;AAAM,QAAA,SAAS,EAAC,aAAhB;AAA8B,QAAA,QAAQ,EAAEI,YAAxC;AAAA,+BACE;AAAU,UAAA,SAAS,EAAC,sBAApB;AAAA,iCACE;AAAA,oCACE;AACI,cAAA,KAAK,EAAEH,QADX;AAEI,cAAA,QAAQ,EAAEO,iBAFd;AAGI,cAAA,IAAI,EAAC,MAHT;AAII,cAAA,WAAW,EAAC;AAJhB;AAAA;AAAA;AAAA;AAAA,oBADF,eAOE;AAAO,cAAA,IAAI,EAAC,QAAZ;AAAqB,cAAA,MAAM;AAA3B;AAAA;AAAA;AAAA;AAAA,oBAPF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAcE,QAAC,UAAD;AACE,QAAA,SAAS,EAAC,iBADZ;AAEE,QAAA,OAAO,EAAED;AAFX;AAAA;AAAA;AAAA;AAAA,cAdF;AAAA;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,UADF;AAyBD;;GA7CQX,qB;;MAAAA,qB;;AA+CT,SAASe,WAAT,QAA2D;AAAA;;AAAA;;AAAA,MAAtC;AAAEd,IAAAA;AAAF,GAAsC;AACzD,QAAMe,WAA6B,GAAGf,KAAK,CAACgB,GAAN,CAAU,aAAV,CAAtC;AACA,QAAMC,gBAAgB,iBAAGjB,KAAK,CAACgB,GAAN,CAAU,YAAV,CAAH,+CAAG,WAAyBE,IAAlD;AACA,QAAMC,QAAQ,GAAG3C,WAAW,EAA5B;AAEA,sBACE,QAAC,OAAD;AAAS,IAAA,KAAK,EAAC,aAAf;AAAA,cACGuC,WAAW,CAACK,GAAZ,CAAgBC,CAAC,iBAChB,QAAC,WAAD;AAEE,MAAA,EAAE,EAAG,IAAGA,CAAC,CAACH,IAAK,GAAEC,QAAQ,CAACG,MAAO,EAFnC;AAGE,MAAA,IAAI,EAAED,CAAC,CAACH,IAHV;AAIE,MAAA,MAAM,EAAEG,CAAC,CAACH,IAAF,KAAWD,gBAJrB;AAKE,MAAA,OAAO,EAAE,MAAMM,OAAO,CAACC,GAAR,CAAYH,CAAC,CAACH,IAAd;AALjB,OACOG,CAAC,CAACH,IADT;AAAA;AAAA;AAAA;AAAA,YADD;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAaD;;IAlBQJ,W;UAGUtC,W;;;MAHVsC,W;;AAoBT,SAASW,WAAT,QAA2D;AAAA;;AAAA;;AAAA,MAAtC;AAAEzB,IAAAA;AAAF,GAAsC;AACzD,QAAM0B,WAA6B,GAAG1B,KAAK,CAACgB,GAAN,CAAU,aAAV,CAAtC;AACA,QAAMW,gBAAgB,kBAAG3B,KAAK,CAACgB,GAAN,CAAU,YAAV,CAAH,gDAAG,YAAyBE,IAAlD;AACA,QAAMC,QAAQ,GAAG3C,WAAW,EAA5B;AAEA,sBACE,QAAC,OAAD;AAAS,IAAA,KAAK,EAAC,aAAf;AAAA,cACGkD,WAAW,CAACN,GAAZ,CAAgBQ,CAAC,iBAChB,QAAC,WAAD;AAEE,MAAA,EAAE,EAAE;AACFC,QAAAA,QAAQ,EAAEV,QAAQ,CAACU,QADjB;AAEFP,QAAAA,MAAM,EAAG,eAAcM,CAAC,CAACV,IAAK;AAF5B,OAFN;AAME,MAAA,IAAI,EAAEU,CAAC,CAACV,IANV;AAOE,MAAA,MAAM,EAAEU,CAAC,CAACV,IAAF,KAAWS,gBAPrB;AAQE,MAAA,OAAO,EAAE,MAAMJ,OAAO,CAACC,GAAR,CAAYI,CAAC,CAACV,IAAd;AARjB,OACOU,CAAC,CAACV,IADT;AAAA;AAAA;AAAA;AAAA,YADD;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAgBD;;IArBQO,W;UAGUjD,W;;;MAHViD,W;;AAuBT,SAASK,MAAT,QAAgE;AAAA,MAAhD;AAACC,IAAAA;AAAD,GAAgD;;AAC9D,QAAMxB,YAAY,GAAIC,CAAD,IAA2C;AAC9DA,IAAAA,CAAC,CAACC,cAAF;AACD,GAFD;;AAIA,sBACE;AAAM,IAAA,QAAQ,EAAEF,YAAhB;AAAA,2BACE;AAAU,MAAA,SAAS,EAAC,eAApB;AAAA,6BACE;AAAA,gCACE;AACE,UAAA,IAAI,EAAC,MADP;AAEE,UAAA,IAAI,EAAC,QAFP;AAGE,UAAA,QAAQ,EAAEwB,kBAHZ;AAIE,UAAA,WAAW,EAAC,QAJd;AAKE,UAAA,YAAY,EAAC;AALf;AAAA;AAAA;AAAA;AAAA,gBADF,eAQE;AAAO,UAAA,IAAI,EAAC,QAAZ;AAAqB,UAAA,MAAM;AAA3B;AAAA;AAAA;AAAA;AAAA,gBARF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAgBD;;MArBQD,M;;AAuBT,SAASE,IAAT,QAA0E;AAAA;;AAAA,MAA5D;AAAChC,IAAAA,KAAD;AAAQC,IAAAA,QAAR;AAAkBC,IAAAA,MAAlB;AAA0B+B,IAAAA;AAA1B,GAA4D;AAExE;AACA,QAAM,CAAC9B,WAAD,EAAc+B,cAAd,IAAgC3D,KAAK,CAAC+B,QAAN,CAAe,KAAf,CAAtC;AAEA,SACG2B,IAAI,KAAKE,SAAV,gBACE;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAA,8BACE;AAEE,QAAA,SAAS,EAAC,0CAFZ;AAGE,QAAA,OAAO,EAAE,MACPlC,QAAQ,CAAC,IAAIlB,cAAJ,CAAmB,WAAnB,EAAgC;AAAEqD,UAAAA,EAAE,EAAEH,IAAI,CAACjB,GAAL,CAAS,IAAT;AAAN,SAAhC,CAAD,CAJZ;AAAA,+BAOE;AAAK,UAAA,SAAS,EAAC,kBAAf;AAAA,kCACE,QAAC,OAAD;AAAS,YAAA,SAAS,EAAC;AAAnB;AAAA;AAAA;AAAA;AAAA,kBADF,EAEGiB,IAAI,CAACjB,GAAL,CAAS,WAAT,CAFH;AAAA;AAAA;AAAA;AAAA;AAAA;AAPF,SACOiB,IAAI,CAACjB,GAAL,CAAS,IAAT,CADP;AAAA;AAAA;AAAA;AAAA,cADF,eAaE;AAAK,QAAA,SAAS,EAAC,eAAf;AAAA,+BACE,QAAC,wBAAD;AACE,UAAA,OAAO,EAAE,MAAMkB,cAAc,CAAC,CAAC/B,WAAF,CAD/B;AAEE,UAAA,SAAS,EAAC;AAFZ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAbF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAsBE,QAAC,qBAAD;AAAuB,MAAA,KAAK,EAAEH,KAA9B;AAAqC,MAAA,QAAQ,EAAEC,QAA/C;AAAyD,MAAA,MAAM,EAAEC,MAAjE;AAAyE,MAAA,WAAW,EAAEC;AAAtF;AAAA;AAAA;AAAA;AAAA,YAtBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,gBAyBI;AAAA;AAAA,mBA1BN;AA4BD;;IAjCQ6B,I;;MAAAA,I;;AAmCT,SAASK,KAAT,QAA2E;AAAA,MAA5D;AAAErC,IAAAA,KAAF;AAASC,IAAAA,QAAT;AAAmBqC,IAAAA;AAAnB,GAA4D;AACzE,QAAMC,KAAgB,GAAGvC,KAAK,CAACgB,GAAN,CAAU,OAAV,EAAmB1C,IAAI,EAAvB,CAAzB;AAEA,sBACE,QAAC,OAAD;AAAS,IAAA,KAAK,EAAC,UAAf;AAAA,cACGiE,KAAK,CACHC,MADF,CACSP,IAAI,IAAIA,IAAI,CAACjB,GAAL,CAAS,WAAT,EAAsByB,QAAtB,CAA+BH,UAA/B,CADjB,EAEElB,GAFF,CAEMa,IAAI,IAAI;AACb,YAAM/B,MAAc,GAAG+B,IAAI,CAACjB,GAAL,CAAS,IAAT,CAAvB;AAEA,0BACE,QAAC,IAAD;AAAM,QAAA,KAAK,EAAEhB,KAAb;AAAoB,QAAA,QAAQ,EAAEC,QAA9B;AAAwC,QAAA,IAAI,EAAEgC,IAA9C;AAAoD,QAAA,MAAM,EAAE/B;AAA5D;AAAA;AAAA;AAAA;AAAA,cADF;AAGD,KARA;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAaD;;MAhBQmC,K;;AAkBT,SAASK,gBAAT,SAA0E;AAAA;;AAAA,MAAhD;AAAE1C,IAAAA,KAAF;AAASC,IAAAA;AAAT,GAAgD;AACxE,QAAMH,WAAoB,GAAGE,KAAK,CAACgB,GAAN,CAAU,aAAV,CAA7B;AACA,QAAM2B,SAAkB,GAAG3C,KAAK,CAACgB,GAAN,CAAU,WAAV,CAA3B;AACA,QAAM,CAAC4B,cAAD,EAAiBC,iBAAjB,IAAsCtE,KAAK,CAAC+B,QAAN,CAAe,KAAf,CAA5C;AACA,QAAM,CAACwC,aAAD,EAAgBC,gBAAhB,IAAoCxE,KAAK,CAAC+B,QAAN,CAAe,KAAf,CAA1C;AAEA,sBACE,QAAC,OAAD;AAAS,IAAA,KAAK,EAAC,eAAf;AAAA,4BACE,QAAC,eAAD;AACE,MAAA,OAAO,EAAE,MAAM;AACb;AACAL,QAAAA,QAAQ,CAAC,IAAIlB,cAAJ,CAAmB,mBAAnB,EAAwC;AAC/Ce,UAAAA,WAAW,EAAEA;AADkC,SAAxC,CAAD,CAAR,CAFa,CAMb;;AACA,YAAG,CAACE,KAAK,CAACgB,GAAN,CAAU,aAAV,CAAJ,EAA8B;AAC5B6B,UAAAA,iBAAiB,CAAC,IAAD,CAAjB,CAD4B,CAG5B;AACA;;AACA5C,UAAAA,QAAQ,CAAC,IAAIlB,cAAJ,CAAmB,eAAnB,EAAoC;AAC3CkD,YAAAA,IAAI,EAAE;AADqC,WAApC,CAAD,CAAR;AAGD,SARD,MASK;AACH;AACAY,UAAAA,iBAAiB,CAAC,KAAD,CAAjB;AACAE,UAAAA,gBAAgB,CAAC,IAAD,CAAhB;AAEAC,UAAAA,UAAU,CAAC,MAAM;AACfD,YAAAA,gBAAgB,CAAC,KAAD,CAAhB;AACD,WAFS,EAEP,IAFO,CAAV,CALG,CASH;;AACA9C,UAAAA,QAAQ,CAAC,IAAIlB,cAAJ,CAAmB,yBAAnB,EAA8C;AACrD4D,YAAAA,SAAS,EAAEA;AAD0C,WAA9C,CAAD,CAAR;AAGD;AACF,OA/BH;AAgCE,MAAA,WAAW,EAAE7C;AAhCf;AAAA;AAAA;AAAA;AAAA,YADF,eAmCE;AAAK,MAAA,SAAS,EAAC,kCAAf;AAAA,iBACG8C,cAAc,iBACb;AAAK,QAAA,SAAS,EAAC,0BAAf;AAAA,gCACE;AAAK,UAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,EAOGE,aAAa,iBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAPpB;AAAA;AAAA;AAAA;AAAA;AAAA,YAnCF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA+CD;;IArDQJ,gB;;OAAAA,gB;AAuDT,OAAO,SAASO,OAAT,SAAiE;AAAA;;AAAA,MAAhD;AAAEjD,IAAAA,KAAF;AAASC,IAAAA;AAAT,GAAgD;AACtE,QAAM,CAACqC,UAAD,EAAaY,aAAb,IAA8B3E,KAAK,CAAC+B,QAAN,CAAe,EAAf,CAApC;;AAEA,QAAMyB,kBAAkB,GAAG,MAAOvB,CAAP,IAAkD;AAC3E,QAAGA,CAAC,CAACI,MAAF,CAASC,KAAT,KAAmB,EAAtB,EAA0B;AACxB;AACA,YAAM1B,QAAQ,CAACc,QAAD,CAAd;AACAiD,MAAAA,aAAa,CAAC,EAAD,CAAb;AACA;AACD;;AAED,QAAGZ,UAAU,CAACG,QAAX,CAAoBjC,CAAC,CAACI,MAAF,CAASC,KAA7B,CAAH,EAAwC;AACtC;AACAqC,MAAAA,aAAa,CAAC1C,CAAC,CAACI,MAAF,CAASC,KAAV,CAAb;AACA;AACD;;AAED,UAAM7B,OAAO,CAACiB,QAAD,EAAWO,CAAC,CAACI,MAAF,CAASC,KAApB,CAAb;AACAqC,IAAAA,aAAa,CAAC,EAAD,CAAb;AACD,GAhBD;;AAkBA,sBACE;AAAK,IAAA,SAAS,EAAC,0EAAf;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,kDAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAIE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,8BACE,QAAC,WAAD;AAAa,QAAA,KAAK,EAAElD,KAApB;AAA2B,QAAA,QAAQ,EAAEC;AAArC;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,WAAD;AAAa,QAAA,KAAK,EAAED,KAApB;AAA2B,QAAA,QAAQ,EAAEC;AAArC;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE,QAAC,MAAD;AAAQ,QAAA,kBAAkB,EAAE8B;AAA5B;AAAA;AAAA;AAAA;AAAA,cAHF,eAIE,QAAC,KAAD;AAAO,QAAA,KAAK,EAAE/B,KAAd;AAAqB,QAAA,QAAQ,EAAEC,QAA/B;AAAyC,QAAA,UAAU,EAAEqC;AAArD;AAAA;AAAA;AAAA;AAAA,cAJF,eAKE,QAAC,gBAAD;AAAkB,QAAA,KAAK,EAAEtC,KAAzB;AAAgC,QAAA,QAAQ,EAAEC;AAA1C;AAAA;AAAA;AAAA;AAAA,cALF;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAcD;;IAnCegD,O;;OAAAA,O","sourcesContent":["// 3rd party library imports\nimport classNames from 'classnames';\nimport { List, Map } from 'immutable';\nimport React from 'react';\nimport { useLocation, Link } from 'react-router-dom';\nimport {\n  RadioButton20,\n  RadioButtonChecked20,\n  Music20,\n  TrashCan20,\n  OverflowMenuHorizontal20,\n} from '@carbon/icons-react';\n\n// project imports\nimport { DispatchAction } from './Reducer';\nimport { AppState } from './State';\nimport { Instrument } from './Instruments';\nimport { Visualizer } from './Visualizers';\nimport './css/ud-menu.css';\nimport './css/recording_button.css';\nimport { getSong, updateSong, deleteSong, getSongs } from './utils/apiCreators';\n\n/** ------------------------------------------------------------------------ **\n * All the components in the side navigation.\n ** ------------------------------------------------------------------------ */\n\ninterface SideNavProps {\n  state: AppState;\n  dispatch: React.Dispatch<DispatchAction>;\n  isShowingUD?: boolean;\n  songId?: number;\n  song?: Map<any, any>; \n  handleSearchChange?: (e: React.ChangeEvent<HTMLInputElement>) => void;\n  searchTerm?: string;\n}\n\ninterface SearchProps {\n  handleSearchChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\n}\n\nconst Section: React.FC<{ title: string }> = ({ title, children }) => {\n  return (\n    <div className=\"flex flex-column h-25 bb b--light-gray pa3\">\n      <div className=\"fw7 mb2\">{title} </div>\n      <div className=\"flex-auto overflow-auto\">{children}</div>\n    </div>\n  );\n};\n\ninterface RadioButtonProps {\n  to: any,\n  text: string,\n  active: boolean,\n  onClick: () => void\n}\n\n// isActive will change the text contained in the record button\n// onClick will dispatch to redux action in Reducer.tsx\ninterface RecordingButtonProps {\n  isRecording: boolean,\n  onClick: () => void\n}\n\nfunction RadioButton({ to, text, active, onClick }: RadioButtonProps): JSX.Element {\n  return (\n    <Link to={to} className=\"no-underline\">\n      <div\n        className={classNames('f7 flex items-center black', { fw7: active })}\n        onClick={onClick}\n      >\n        {active ? (\n          <RadioButtonChecked20 className=\"mr1\" />\n        ) : (\n          <RadioButton20 className=\"mr1\" />\n        )}\n        <div className=\"dim\">{text}</div>\n      </div>\n    </Link>\n  );\n}\n\nfunction RecordingButton({ isRecording, onClick }: RecordingButtonProps): JSX.Element {\n  return (\n    <div className=\"recording-buttons\">\n      <button className=\"recording-button\" onClick={onClick}>\n        {isRecording ? \"Stop\" : \"Record\"}\n      </button>\n    </div>\n  );\n}\n\nfunction UpdateAndDeleteButton({state, dispatch, songId, isShowingUD}: SideNavProps): JSX.Element {\n\n  const [newTitle, setNewTitle] = React.useState('');\n\n  const handleSubmit = async (e: React.ChangeEvent<HTMLFormElement>) => {\n    e.preventDefault();\n\n    if(songId)\n      await updateSong(dispatch, newTitle, songId);\n\n    setNewTitle('');\n  };\n\n  const handleDelete = async () => {\n    if(songId)\n      await deleteSong(dispatch, songId);\n  };\n\n  const handleTitleChange = (e: React.ChangeEvent<HTMLInputElement>) => setNewTitle(e.target.value);\n\n  return (\n    <div className=\"ud-menu\">\n      { isShowingUD && (\n        <div className=\"ud-menu-content\">\n          <form className=\"update-form\" onSubmit={handleSubmit}>\n            <fieldset className=\"update-form-fieldset\">\n              <label>\n                <input\n                    value={newTitle}\n                    onChange={handleTitleChange}\n                    type=\"text\"\n                    placeholder=\"Edit the song title\"\n                />\n                <input type=\"submit\" hidden /> \n              </label>\n            </fieldset>\n          </form>\n          <TrashCan20 \n            className=\"delete-icon dim\"\n            onClick={handleDelete}\n          />\n        </div>\n      )}\n    </div>\n  );\n}\n\nfunction Instruments({ state }: SideNavProps): JSX.Element {\n  const instruments: List<Instrument> = state.get('instruments');\n  const activeInstrument = state.get('instrument')?.name;\n  const location = useLocation();\n\n  return (\n    <Section title=\"Instruments\">\n      {instruments.map(i => (\n        <RadioButton\n          key={i.name}\n          to={`/${i.name}${location.search}`}\n          text={i.name}\n          active={i.name === activeInstrument}\n          onClick={() => console.log(i.name)}\n        />\n      ))}\n    </Section>\n  );\n}\n\nfunction Visualizers({ state }: SideNavProps): JSX.Element {\n  const visualizers: List<Visualizer> = state.get('visualizers');\n  const activeVisualizer = state.get('visualizer')?.name;\n  const location = useLocation();\n\n  return (\n    <Section title=\"Visualizers\">\n      {visualizers.map(v => (\n        <RadioButton\n          key={v.name}\n          to={{\n            pathname: location.pathname,\n            search: `?visualizer=${v.name}`,\n          }}\n          text={v.name}\n          active={v.name === activeVisualizer}\n          onClick={() => console.log(v.name)}\n        />\n      ))}\n    </Section>\n  );\n}\n\nfunction Search({handleSearchChange}: SearchProps): JSX.Element {\n  const handleSubmit = (e: React.ChangeEvent<HTMLFormElement>) => {\n    e.preventDefault();\n  };\n  \n  return (\n    <form onSubmit={handleSubmit}>\n      <fieldset className=\"form-fieldset\">\n        <label>\n          <input \n            type=\"text\"\n            name=\"search\"\n            onChange={handleSearchChange}\n            placeholder=\"Search\"\n            autoComplete=\"off\"\n          />\n          <input type=\"submit\" hidden />\n        </label>\n      </fieldset>\n    </form>\n  );\n}\n\nfunction Song({state, dispatch, songId, song}: SideNavProps): JSX.Element {\n\n  // UD is an abbreviation for update/delete \n  const [isShowingUD, setIsShowingUD] = React.useState(false);  \n\n  return ( \n    (song !== undefined) ? \n      <div className=\"song-wrapper\">\n        <div className=\"inline-flex w-100\">\n          <div\n            key={song.get('id')}\n            className=\"f7 pointer song underline no-underline i\"\n            onClick={() =>\n              dispatch(new DispatchAction('PLAY_SONG', { id: song.get('id') }))\n            }\n          >\n            <div className=\"song-content dim\">\n              <Music20 className=\"mr1\" />\n              {song.get('songTitle')}\n            </div>\n          </div>\n          <div className=\"overflow-menu\">\n            <OverflowMenuHorizontal20 \n              onClick={() => setIsShowingUD(!isShowingUD)}\n              className=\"dim\"\n            />\n          </div>\n        </div>\n        \n        <UpdateAndDeleteButton state={state} dispatch={dispatch} songId={songId} isShowingUD={isShowingUD}/>\n      </div> \n      : <> </>\n  );\n}\n\nfunction Songs({ state, dispatch, searchTerm }: SideNavProps): JSX.Element {\n  const songs: List<any> = state.get('songs', List());\n\n  return (\n    <Section title=\"Playlist\">\n      {songs\n        .filter(song => song.get('songTitle').includes(searchTerm))\n        .map(song => {\n        const songId: number = song.get('id');\n\n        return (\n          <Song state={state} dispatch={dispatch} song={song} songId={songId}/>\n        );\n      })}\n    </Section>\n  );\n}\n\nfunction RecordingButtons({ state, dispatch }: SideNavProps): JSX.Element {\n  const isRecording: boolean = state.get('isRecording');\n  const openPopup: boolean = state.get('openPopup');\n  const [startRecording, setStartRecording] = React.useState(false);\n  const [stopRecording, setStopRecording] = React.useState(false);\n\n  return (\n    <Section title=\"Record a Song\">\n      <RecordingButton\n        onClick={() => {\n          // notify redux and update state for whether the user is recording or not \n          dispatch(new DispatchAction('TRIGGER_RECORDING', {\n            isRecording: isRecording\n          }));\n\n          // create some sort of condition here if isRecording is set to true\n          if(!state.get('isRecording')) {\n            setStartRecording(true);\n\n            // notify redux that a new song should be created\n            // a song should simply hold a list of the notes clicked by the user \n            dispatch(new DispatchAction('RECORD_A_SONG', {\n              song: []\n            }));\n          }\n          else {\n            // stop recording a song and add song to db\n            setStartRecording(false);\n            setStopRecording(true);\n\n            setTimeout(() => {\n              setStopRecording(false);\n            }, 3000);\n\n            // if a recording is stopped, then open the popup menu where the song title will be input\n            dispatch(new DispatchAction('TRIGGER_RECORDING_POPUP', {\n              openPopup: openPopup\n            }));\n          }\n        }}\n        isRecording={isRecording}\n      />\n      <div className=\"recording-button-message-wrapper\">\n        {startRecording && \n          <div className=\"recording-button-message\">\n            <div className=\"blinking-record-icon\">  </div>\n            <p> Your recording is live </p>\n          </div>\n        }\n        {stopRecording && <p> Your recording has stopped </p>}\n      </div>\n    </Section>\n  );\n}\n\nexport function SideNav({ state, dispatch }: SideNavProps): JSX.Element {\n  const [searchTerm, setSearchTerm] = React.useState('');\n\n  const handleSearchChange = async (e: React.ChangeEvent<HTMLInputElement>) => {\n    if(e.target.value === '') {\n      // clear searched songs from state\n      await getSongs(dispatch);\n      setSearchTerm('');\n      return;\n    }\n\n    if(searchTerm.includes(e.target.value)) {\n      // if the new search value is already in search term, another API is not necessary\n      setSearchTerm(e.target.value);\n      return;\n    }\n\n    await getSong(dispatch, e.target.value);\n    setSearchTerm('');\n  };\n  \n  return (\n    <div className=\"absolute top-0 left-0 bottom-0 w5 z-1 shadow-1 bg-white flex flex-column\">\n      <div className=\"h3 fw7 f5 flex items-center pl3 bb b--light-gray\">\n        Quadtuplets\n      </div>\n      <div className=\"flex-auto\">\n        <Instruments state={state} dispatch={dispatch} />\n        <Visualizers state={state} dispatch={dispatch} />\n        <Search handleSearchChange={handleSearchChange}/>\n        <Songs state={state} dispatch={dispatch} searchTerm={searchTerm}/>\n        <RecordingButtons state={state} dispatch={dispatch}/>\n      </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}