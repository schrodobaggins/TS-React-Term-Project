{"ast":null,"code":"// 3rd party library imports\n// project imports\nimport{Visualizer}from'../Visualizers';export var KennethVisualizer=new Visualizer('kennethchuson2',function(p5,analyzer){var width=window.innerWidth;var height=window.innerHeight/2;var dim=Math.min(width,height);var arr_colors=['rgb(0,255,0)','rgb(195,4,4)','rgb(42,13,191)','rgba(0,234,242)'];p5.background('#4F1B77');p5.strokeWeight(dim*0.03);//p5.stroke(255, 204, 100);\n//p5.noFill();\nfor(var i=arr_colors.length-1;i>0;i--){var random=Math.floor(Math.random()*(i+1));var temp=arr_colors[i];arr_colors[i]=arr_colors[random];arr_colors[random]=temp;p5.stroke(arr_colors[i]);}var values=analyzer.getValue();p5.translate(width/2,height/2);p5.beginShape();for(var _i=0;_i<values.length;_i++){var r=values[_i];var x=r*Math.cos(_i)*width/1.150;var y=r*Math.sin(_i)*height/1.150;// Place vertex\np5.point(x,y);}p5.endShape();});","map":{"version":3,"sources":["/Users/michaelschroeder/Documents/GitHub/final-project-symphony-quadtuplets/client/src/visualizers/kennethchuson2.tsx"],"names":["Visualizer","KennethVisualizer","p5","analyzer","width","window","innerWidth","height","innerHeight","dim","Math","min","arr_colors","background","strokeWeight","i","length","random","floor","temp","stroke","values","getValue","translate","beginShape","r","x","cos","y","sin","point","endShape"],"mappings":"AAAA;AAIA;AACA,OAASA,UAAT,KAA2B,gBAA3B,CAEA,MAAO,IAAMC,CAAAA,iBAAiB,CAAG,GAAID,CAAAA,UAAJ,CAC/B,gBAD+B,CAE/B,SAACE,EAAD,CAASC,QAAT,CAAqC,CACnC,GAAMC,CAAAA,KAAK,CAAGC,MAAM,CAACC,UAArB,CACA,GAAMC,CAAAA,MAAM,CAAGF,MAAM,CAACG,WAAP,CAAqB,CAApC,CACA,GAAMC,CAAAA,GAAG,CAAGC,IAAI,CAACC,GAAL,CAASP,KAAT,CAAgBG,MAAhB,CAAZ,CAEA,GAAIK,CAAAA,UAAmB,CAAG,CAAC,cAAD,CAAiB,cAAjB,CAAiC,gBAAjC,CAAmD,iBAAnD,CAA1B,CAEAV,EAAE,CAACW,UAAH,CAAc,SAAd,EAEAX,EAAE,CAACY,YAAH,CAAgBL,GAAG,CAAG,IAAtB,EACA;AACA;AAEA,IAAK,GAAIM,CAAAA,CAAC,CAAGH,UAAU,CAACI,MAAX,CAAoB,CAAjC,CAAoCD,CAAC,CAAG,CAAxC,CAA2CA,CAAC,EAA5C,CAAgD,CAC9C,GAAIE,CAAAA,MAAM,CAAGP,IAAI,CAACQ,KAAL,CAAWR,IAAI,CAACO,MAAL,IAAiBF,CAAC,CAAG,CAArB,CAAX,CAAb,CACA,GAAII,CAAAA,IAAI,CAAGP,UAAU,CAACG,CAAD,CAArB,CACAH,UAAU,CAACG,CAAD,CAAV,CAAgBH,UAAU,CAACK,MAAD,CAA1B,CACAL,UAAU,CAACK,MAAD,CAAV,CAAqBE,IAArB,CACAjB,EAAE,CAACkB,MAAH,CAAUR,UAAU,CAACG,CAAD,CAApB,EACD,CAGD,GAAMM,CAAAA,MAAM,CAAGlB,QAAQ,CAACmB,QAAT,EAAf,CAGApB,EAAE,CAACqB,SAAH,CAAanB,KAAK,CAAG,CAArB,CAAwBG,MAAM,CAAG,CAAjC,EACAL,EAAE,CAACsB,UAAH,GACA,IAAK,GAAIT,CAAAA,EAAC,CAAG,CAAb,CAAgBA,EAAC,CAAGM,MAAM,CAACL,MAA3B,CAAmCD,EAAC,EAApC,CAAwC,CACtC,GAAMU,CAAAA,CAAC,CAAGJ,MAAM,CAACN,EAAD,CAAhB,CAEA,GAAMW,CAAAA,CAAC,CAAGD,CAAC,CAAGf,IAAI,CAACiB,GAAL,CAASZ,EAAT,CAAJ,CAAkBX,KAAlB,CAA0B,KAApC,CACA,GAAMwB,CAAAA,CAAC,CAAGH,CAAC,CAAGf,IAAI,CAACmB,GAAL,CAASd,EAAT,CAAJ,CAAkBR,MAAlB,CAA2B,KAArC,CACA;AACAL,EAAE,CAAC4B,KAAH,CAASJ,CAAT,CAAYE,CAAZ,EACD,CACD1B,EAAE,CAAC6B,QAAH,GACD,CAtC8B,CAA1B","sourcesContent":["// 3rd party library imports\nimport P5 from 'p5';\nimport * as Tone from 'tone';\n\n// project imports\nimport { Visualizer } from '../Visualizers';\n\nexport const KennethVisualizer = new Visualizer(\n  'kennethchuson2',\n  (p5: P5, analyzer: Tone.Analyser) => {\n    const width = window.innerWidth;\n    const height = window.innerHeight / 2;\n    const dim = Math.min(width, height);\n\n    let arr_colors:string[] = ['rgb(0,255,0)', 'rgb(195,4,4)', 'rgb(42,13,191)', 'rgba(0,234,242)']\n\n    p5.background('#4F1B77');\n\n    p5.strokeWeight(dim * 0.03);\n    //p5.stroke(255, 204, 100);\n    //p5.noFill();\n\n    for (let i = arr_colors.length - 1; i > 0; i--) {\n      let random = Math.floor(Math.random() * (i + 1))\n      let temp = arr_colors[i] \n      arr_colors[i] = arr_colors[random]\n      arr_colors[random] = temp \n      p5.stroke(arr_colors[i])\n    }\n\n\n    const values = analyzer.getValue();\n\n\n    p5.translate(width / 2, height / 2) \n    p5.beginShape();\n    for (let i = 0; i < values.length; i++) {\n      const r = values[i] as number\n\n      const x = r * Math.cos(i) * width / 1.150\n      const y = r * Math.sin(i) * height / 1.150\n      // Place vertex\n      p5.point(x, y);\n    }\n    p5.endShape();\n  },\n);\n"]},"metadata":{},"sourceType":"module"}