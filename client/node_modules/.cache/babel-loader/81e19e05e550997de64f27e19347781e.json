{"ast":null,"code":"import _regeneratorRuntime from \"/Users/michaelschroeder/Documents/GitHub/final-project-symphony-quadtuplets/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/michaelschroeder/Documents/GitHub/final-project-symphony-quadtuplets/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nexport var createAudioDestinationNodeRenderer = function createAudioDestinationNodeRenderer(renderInputsOfAudioNode) {\n  var renderedNativeAudioDestinationNodes = new WeakMap();\n\n  var createAudioDestinationNode = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(proxy, nativeOfflineAudioContext) {\n      var nativeAudioDestinationNode;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              nativeAudioDestinationNode = nativeOfflineAudioContext.destination;\n              renderedNativeAudioDestinationNodes.set(nativeOfflineAudioContext, nativeAudioDestinationNode);\n              _context.next = 4;\n              return renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeAudioDestinationNode);\n\n            case 4:\n              return _context.abrupt(\"return\", nativeAudioDestinationNode);\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function createAudioDestinationNode(_x, _x2) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  return {\n    render: function render(proxy, nativeOfflineAudioContext) {\n      var renderedNativeAudioDestinationNode = renderedNativeAudioDestinationNodes.get(nativeOfflineAudioContext);\n\n      if (renderedNativeAudioDestinationNode !== undefined) {\n        return Promise.resolve(renderedNativeAudioDestinationNode);\n      }\n\n      return createAudioDestinationNode(proxy, nativeOfflineAudioContext);\n    }\n  };\n};","map":{"version":3,"sources":["../../../src/factories/audio-destination-node-renderer-factory.ts"],"names":[],"mappings":";;AAQA,OAAO,IAAM,kCAAkC,GAAyC,SAA3E,kCAA2E,CAGpF,uBAHoF,EAIpF;AACA,MAAM,mCAAmC,GAAG,IAAI,OAAJ,EAA5C;;AAEA,MAAM,0BAA0B;AAAA,wEAAG,iBAAO,KAAP,EAAwC,yBAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AACzB,cAAA,0BADyB,GACI,yBAAyB,CAAC,WAD9B;AAG/B,cAAA,mCAAmC,CAAC,GAApC,CAAwC,yBAAxC,EAAmE,0BAAnE;AAH+B;AAAA,qBAKzB,uBAAuB,CAAC,KAAD,EAAQ,yBAAR,EAAmC,0BAAnC,CALE;;AAAA;AAAA,+CAOxB,0BAPwB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAA1B,0BAA0B;AAAA;AAAA;AAAA,KAAhC;;AAUA,SAAO;AACH,IAAA,MADG,kBAEC,KAFD,EAGC,yBAHD,EAGsD;AAErD,UAAM,kCAAkC,GAAG,mCAAmC,CAAC,GAApC,CAAwC,yBAAxC,CAA3C;;AAEA,UAAI,kCAAkC,KAAK,SAA3C,EAAsD;AAClD,eAAO,OAAO,CAAC,OAAR,CAAgB,kCAAhB,CAAP;AACH;;AAED,aAAO,0BAA0B,CAAC,KAAD,EAAQ,yBAAR,CAAjC;AACH;AAZE,GAAP;AAcH,CA/BM","sourceRoot":"","sourcesContent":["export const createAudioDestinationNodeRenderer = (renderInputsOfAudioNode) => {\n    const renderedNativeAudioDestinationNodes = new WeakMap();\n    const createAudioDestinationNode = async (proxy, nativeOfflineAudioContext) => {\n        const nativeAudioDestinationNode = nativeOfflineAudioContext.destination;\n        renderedNativeAudioDestinationNodes.set(nativeOfflineAudioContext, nativeAudioDestinationNode);\n        await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeAudioDestinationNode);\n        return nativeAudioDestinationNode;\n    };\n    return {\n        render(proxy, nativeOfflineAudioContext) {\n            const renderedNativeAudioDestinationNode = renderedNativeAudioDestinationNodes.get(nativeOfflineAudioContext);\n            if (renderedNativeAudioDestinationNode !== undefined) {\n                return Promise.resolve(renderedNativeAudioDestinationNode);\n            }\n            return createAudioDestinationNode(proxy, nativeOfflineAudioContext);\n        }\n    };\n};\n//# sourceMappingURL=audio-destination-node-renderer-factory.js.map"]},"metadata":{},"sourceType":"module"}