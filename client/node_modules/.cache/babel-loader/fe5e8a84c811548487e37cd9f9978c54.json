{"ast":null,"code":"import _toConsumableArray from\"/Users/michaelschroeder/Documents/GitHub/final-project-symphony-quadtuplets/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _classCallCheck from\"/Users/michaelschroeder/Documents/GitHub/final-project-symphony-quadtuplets/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";// 3rd party\nimport{fromJS}from'immutable';// project deps\nexport var DispatchAction=function DispatchAction(type,args){_classCallCheck(this,DispatchAction);this.type=void 0;this.args=void 0;this.type=type;this.args=fromJS(args);};/** ------------------------------------------------------------------------ **\n * Top-level application reducer.\n ** ------------------------------------------------------------------------ */export function appReducer(state,action){var type=action.type,args=action.args;console.debug(\"\".concat(type));// Question: Does this function remind of you registering callbacks?\nvar newState=function(){switch(type){case'SET_SOCKET':{var oldSocket=state.get('socket');if(oldSocket){oldSocket.close();}return state.set('socket',args.get('socket'));}case'DELETE_SOCKET':{return state.delete('socket');}case'SET_SONGS':{var songs=args.get('songs');console.log(songs);return state.set('songs',songs);}case'PLAY_SONG':{var notes=state.get('songs').find(function(s){return s.get('id')===args.get('id');}).get('notes');return state.set('notes',notes);}case'STOP_SONG':{return state.delete('notes');}case'SET_LOCATION':{var _URLSearchParams$get;var pathname=args.getIn(['location','pathname'],'');var search=args.getIn(['location','search'],'');var instrumentName=pathname.substring(1);var visualizerName=(_URLSearchParams$get=new URLSearchParams(search.substring(1)).get('visualizer'))!==null&&_URLSearchParams$get!==void 0?_URLSearchParams$get:'';var instruments=state.get('instruments');var visualizers=state.get('visualizers');var instrument=instruments.find(function(i){return i.name===instrumentName;});var visualizer=visualizers.find(function(v){return v.name===visualizerName;});return state.set('instrument',instrument).set('visualizer',visualizer);}case'TRIGGER_RECORDING':{var isRecording=args.get('isRecording');return state.set('isRecording',!isRecording);}case'TRIGGER_RECORDING_POPUP':{var openPopup=args.get('openPopup');return state.set('openPopup',!openPopup);}case'RECORD_A_SONG':{var song=args.get('song');return state.set('song',song);}case'ADD_NOTE_TO_SONG':{var note=args.get('note');var songCopy=state.get('song');songCopy=[].concat(_toConsumableArray(songCopy),[note]);return state.set('song',songCopy);}default:console.error(\"type unknown: \".concat(type,\"\\n\"),args.toJS());return state;}}();console.debug(newState.update('socket',function(s){return s?'[socket]':s;}).toJS());return newState;}","map":{"version":3,"sources":["/Users/michaelschroeder/Documents/GitHub/final-project-symphony-quadtuplets/client/src/Reducer.tsx"],"names":["fromJS","DispatchAction","type","args","appReducer","state","action","console","debug","newState","oldSocket","get","close","set","delete","songs","log","notes","find","s","pathname","getIn","search","instrumentName","substring","visualizerName","URLSearchParams","instruments","visualizers","instrument","i","name","visualizer","v","isRecording","openPopup","song","note","songCopy","error","toJS","update"],"mappings":"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","sourcesContent":["// 3rd party\nimport { List, Map, fromJS } from 'immutable';\n\n// project deps\nimport { Instrument } from './Instruments';\nimport { Visualizer } from './Visualizers';\nimport { AppState } from './State';\n\n/** ------------------------------------------------------------------------ **\n * All user input is handled by DispatchAction.\n ** ------------------------------------------------------------------------ */\n\n/**\n * Observation: pure map (compare and contrast with impure map)\n *\n * 'instrument': Instrument\n * 'visualizer': Visualizer\n * 'songs': List<string>\n * 'notes': List<{id: number, songTitle: string, notes: string}>\n */\ntype DispatchArgs = {\n  [key: string]: any;\n};\n\n// A simple algebraic data-type with string literal types\ntype DispatchActionType =\n  | 'SET_SOCKET'\n  | 'DELETE_SOCKET'\n  | 'SET_SONGS'\n  | 'PLAY_SONG'\n  | 'STOP_SONG'\n  | 'SET_LOCATION'\n  | 'TRIGGER_RECORDING'\n  | 'GET_RECORDING_STATUS'\n  | 'RECORD_A_SONG'\n  | 'TRIGGER_RECORDING_POPUP'\n  | 'ADD_NOTE_TO_SONG';\n\nexport class DispatchAction {\n  readonly type: DispatchActionType;\n  readonly args: Map<string, any>;\n\n  constructor(type: DispatchActionType, args?: DispatchArgs) {\n    this.type = type;\n    this.args = fromJS(args) as Map<string, any>;\n  }\n}\n\n/** ------------------------------------------------------------------------ **\n * Top-level application reducer.\n ** ------------------------------------------------------------------------ */\n\nexport function appReducer(state: AppState, action: DispatchAction): AppState {\n  const { type, args } = action;\n\n  console.debug(`${type}`);\n\n  // Question: Does this function remind of you registering callbacks?\n  const newState = (() => {\n    switch (type) {\n      case 'SET_SOCKET': {\n        const oldSocket = state.get('socket');\n        if (oldSocket) {\n          oldSocket.close();\n        }\n\n        return state.set('socket', args.get('socket'));\n      }\n      \n      case 'DELETE_SOCKET': {\n        return state.delete('socket');\n      }\n      \n      case 'SET_SONGS': {\n        const songs = args.get('songs');\n        console.log(songs);\n        return state.set('songs', songs);\n      }\n      \n      case 'PLAY_SONG': {\n        const notes = state\n          .get('songs')\n          .find((s: any) => s.get('id') === args.get('id'))\n          .get('notes');\n        return state.set('notes', notes);\n      }\n      \n      case 'STOP_SONG': {\n        return state.delete('notes');\n      }\n      \n      case 'SET_LOCATION': {\n        const pathname = args.getIn(['location', 'pathname'], '') as string;\n        const search = args.getIn(['location', 'search'], '') as string;\n\n        const instrumentName: string = pathname.substring(1);\n        const visualizerName: string =\n          new URLSearchParams(search.substring(1)).get('visualizer') ?? '';\n        const instruments: List<Instrument> = state.get('instruments');\n        const visualizers: List<Visualizer> = state.get('visualizers');\n\n        const instrument = instruments.find(i => i.name === instrumentName);\n        const visualizer = visualizers.find(v => v.name === visualizerName);\n\n        return state\n          .set('instrument', instrument)\n          .set('visualizer', visualizer);\n      }\n      \n      case 'TRIGGER_RECORDING': {\n        const isRecording = args.get('isRecording');\n\n        return state.set('isRecording', !isRecording);\n      }\n\n      case 'TRIGGER_RECORDING_POPUP': {\n        const openPopup = args.get('openPopup');\n\n        return state.set('openPopup', !openPopup);\n      }\n\n      case 'RECORD_A_SONG': {\n        const song: string[] = args.get('song');\n\n        return state.set('song', song);\n      }\n\n      case 'ADD_NOTE_TO_SONG': {\n        const note: string = args.get('note');\n        let songCopy: string[] = state.get('song');\n            songCopy = [...songCopy, note];\n\n        return state.set('song', songCopy);\n      }\n\n      default:\n        console.error(`type unknown: ${type}\\n`, args.toJS());\n        return state;\n    }\n  })();\n\n  console.debug(newState.update('socket', s => (s ? '[socket]' : s)).toJS());\n\n  return newState;\n}\n"]},"metadata":{},"sourceType":"module"}