{"ast":null,"code":"var _jsxFileName = \"/Users/michaelschroeder/Documents/GitHub/final-project-symphony-quadtuplets/client/src/instruments/kennethchuson2.tsx\";\n// 3rd party library imports\nimport * as Tone from 'tone';\nimport classNames from 'classnames';\nimport { List, Range } from 'immutable';\nimport React from 'react'; // project imports\n\nimport { Instrument } from '../Instruments';\nimport { DispatchAction } from '../Reducer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Polysynth = new Tone.PolySynth().toDestination();\nPolysynth.set({\n  detune: -1200\n});\nexport function PianoKey(_ref) {\n  let {\n    note,\n    // synth,\n    // minor,\n    // index,\n    identity,\n    state,\n    dispatch\n  } = _ref;\n\n  /**\n   * This React component corresponds to either a major or minor key in the piano.\n   * See `PianoKeyWithoutJSX` for the React component without JSX.\n   */\n  return (\n    /*#__PURE__*/\n    // Observations:\n    // 1. The JSX refers to the HTML-looking syntax within TypeScript.\n    // 2. The JSX will be **transpiled** into the corresponding `React.createElement` library call.\n    // 3. The curly braces `{` and `}` should remind you of string interpolation.\n    // <div\n    //   onMouseDown={() => synth?.triggerAttack(`${note}`)} // Question: what is `onMouseDown`?\n    //   onMouseUp={() => synth?.triggerRelease('+0.25')} // Question: what is `onMouseUp`?\n    //   className={classNames('ba pointer absolute dim', {\n    //     'bg-black black h3': minor, // minor keys are black\n    //     'black bg-white h4': !minor, // major keys are white\n    //   })}\n    //   style={{\n    //     // CSS\n    //     top: 0,\n    //     left: `${index * 2}rem`,\n    //     zIndex: minor ? 1 : 0,\n    //     width: minor ? '1.5rem' : '2rem',\n    //     marginLeft: minor ? '0.25rem' : 0,\n    //   }}\n    // ></div>\n    _jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onMouseDown: () => {\n          Polysynth === null || Polysynth === void 0 ? void 0 : Polysynth.triggerAttack(`${note}`); // only add the note into a new song if recording button has been clicked\n\n          if (state.get('isRecording')) {\n            dispatch(new DispatchAction('ADD_NOTE_TO_SONG', {\n              note: note\n            }));\n          }\n        },\n        onMouseUp: () => Polysynth === null || Polysynth === void 0 ? void 0 : Polysynth.triggerRelease(`${note}`, '+0.19'),\n        style: {// CSS\n          // top: 0,\n          // left: `${index * 2}rem`,\n          // zIndex: minor ? 1 : 0,\n          // width: minor ? '1.5rem' : '2rem',\n          // marginLeft: minor ? '0.25rem' : 0,\n        },\n        children: identity\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 5\n    }, this)\n  );\n} // eslint-disable-next-line\n\n_c = PianoKey;\n\nfunction PianoKeyWithoutJSX(_ref2) {\n  let {\n    note,\n    synth,\n    minor,\n    index\n  } = _ref2;\n\n  /**\n   * This React component for pedagogical purposes.\n   * See `PianoKey` for the React component with JSX (JavaScript XML).\n   */\n  return /*#__PURE__*/React.createElement('div', {\n    onMouseDown: () => synth === null || synth === void 0 ? void 0 : synth.triggerAttack(`${note}`),\n    onMouseUp: () => synth === null || synth === void 0 ? void 0 : synth.triggerRelease('+0.25'),\n    className: classNames('ba pointer absolute dim', {\n      'bg-black black h3': minor,\n      'black bg-white h4': !minor\n    }),\n    style: {\n      top: 0,\n      left: `${index * 2}rem`,\n      zIndex: minor ? 1 : 0,\n      width: minor ? '1.5rem' : '2rem',\n      marginLeft: minor ? '0.25rem' : 0\n    }\n  }, []);\n}\n/*function PianoType({ title, onClick, active }: any): JSX.Element {\n  return (\n    <div\n      onClick={onClick}\n      className={classNames('dim pointer ph2 pv1 ba mr2 br1 fw7 bw1', {\n        'b--black black': active,\n        'gray b--light-gray': !active,\n      })}\n    >\n      {title}\n    </div>\n  );\n}*/\n\n\n_c2 = PianoKeyWithoutJSX;\n\nfunction Kalimba(_ref3) {\n  let {\n    state,\n    dispatch,\n    synth\n  } = _ref3;\n  const keys = List([{\n    note: \"G5\",\n    idx: 0\n  }, {\n    note: \"F5\",\n    idx: 0.5\n  }, {\n    note: \"E5\",\n    idx: 1\n  }, {\n    note: \"D5\",\n    idx: 1.5\n  }, {\n    note: \"B4\",\n    idx: 2\n  }, {\n    note: \"C5\",\n    idx: 0\n  }, {\n    note: \"D5\",\n    idx: 0.5\n  }, {\n    note: \"E5\",\n    idx: 1\n  }, {\n    note: \"F5\",\n    idx: 1.5\n  } // { note: 'E', idx: 2 },\n  // { note: 'F', idx: 3 },\n  // { note: 'Gb', idx: 3.5 },\n  // { note: 'G', idx: 4 },\n  // { note: 'Ab', idx: 4.5 },\n  // { note: 'A', idx: 5 },\n  // { note: 'Bb', idx: 5.5 },\n  // { note: 'B', idx: 6 },\n  ]); // const setOscillator = (newType: Tone.ToneOscillatorType) => {\n  //   setSynth(oldSynth => {\n  //     oldSynth.disconnect();\n  //     return new Tone.Synth({\n  //       //oscillator: { type: newType } as Tone.OmniOscillatorOptions,\n  //     }).toDestination();\n  //   });\n  // };\n\n  /*const oscillators: List<OscillatorType> = List([\n    'sine',\n    'sawtooth',\n    'square',\n    'triangle',\n    'fmsine',\n    'fmsawtooth',\n    'fmtriangle',\n    'amsine',\n    'amsawtooth',\n    'amtriangle',\n  ]) as List<OscillatorType>;*/\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"pv5\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: 'pl4 pt4 flex'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Kalimba_main\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          backgroundImage: 'url(\"https://cdn-icons-png.flaticon.com/512/3100/3100511.png\")',\n          backgroundRepeat: 'no-repeat',\n          right: '50px'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            height: '500px',\n            width: '320px'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"keys\",\n            style: {\n              margin: 'auto',\n              width: '60%',\n              padding: '30px',\n              display: \"flex\"\n            },\n            children: Range(1, 2).map(octave => keys.map(key => {\n              const note = `${key.note}`;\n              return /*#__PURE__*/_jsxDEV(PianoKey, {\n                //react key\n                note: note,\n                synth: synth,\n                octave: octave,\n                identity: key.note,\n                index: (octave - 2) * 7 + key.idx,\n                state: state,\n                dispatch: dispatch\n              }, note, false, {\n                fileName: _jsxFileName,\n                lineNumber: 213,\n                columnNumber: 21\n              }, this);\n            }))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 192,\n    columnNumber: 5\n  }, this);\n}\n\n_c3 = Kalimba;\nexport const KalimbaInstrument = new Instrument('kennethchuson2', Kalimba);\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"PianoKey\");\n$RefreshReg$(_c2, \"PianoKeyWithoutJSX\");\n$RefreshReg$(_c3, \"Kalimba\");","map":{"version":3,"sources":["/Users/michaelschroeder/Documents/GitHub/final-project-symphony-quadtuplets/client/src/instruments/kennethchuson2.tsx"],"names":["Tone","classNames","List","Range","React","Instrument","DispatchAction","Polysynth","PolySynth","toDestination","set","detune","PianoKey","note","identity","state","dispatch","triggerAttack","get","triggerRelease","PianoKeyWithoutJSX","synth","minor","index","createElement","onMouseDown","onMouseUp","className","style","top","left","zIndex","width","marginLeft","Kalimba","keys","idx","backgroundImage","backgroundRepeat","right","height","margin","padding","display","map","octave","key","KalimbaInstrument"],"mappings":"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","sourcesContent":["// 3rd party library imports\nimport * as Tone from 'tone';\nimport classNames from 'classnames';\nimport { List, Range } from 'immutable';\nimport React from 'react';\n\n// project imports\nimport { Instrument, InstrumentProps } from '../Instruments';\nimport { DispatchAction } from '../Reducer';\nimport { AppState } from '../State';\n\n/** ------------------------------------------------------------------------ **\n * Contains implementation of components for Piano.\n ** ------------------------------------------------------------------------ */\n\ninterface KulimbaKeyProps {\n  note: string; // C, Db, D, Eb, E, F, Gb, G, Ab, A, Bb, B\n  duration?: string;\n  synth?: Tone.Synth; // Contains library code for making sound\n  minor?: boolean; // True if minor key, false if major key\n  identity: string; \n  octave: number;\n  index: number; // octave + index together give a location for the piano key\n  state: AppState;\n  dispatch: React.Dispatch<DispatchAction>;\n}\n\nconst Polysynth = new Tone.PolySynth().toDestination();\n\n\nPolysynth.set({\n  detune: -1200\n})\n\n\nexport function PianoKey({\n  note,\n  // synth,\n  // minor,\n  // index,\n  identity,\n  state,\n  dispatch\n}: KulimbaKeyProps): JSX.Element {\n  /**\n   * This React component corresponds to either a major or minor key in the piano.\n   * See `PianoKeyWithoutJSX` for the React component without JSX.\n   */\n\n  \n  return (\n    // Observations:\n    // 1. The JSX refers to the HTML-looking syntax within TypeScript.\n    // 2. The JSX will be **transpiled** into the corresponding `React.createElement` library call.\n    // 3. The curly braces `{` and `}` should remind you of string interpolation.\n    // <div\n    //   onMouseDown={() => synth?.triggerAttack(`${note}`)} // Question: what is `onMouseDown`?\n    //   onMouseUp={() => synth?.triggerRelease('+0.25')} // Question: what is `onMouseUp`?\n    //   className={classNames('ba pointer absolute dim', {\n    //     'bg-black black h3': minor, // minor keys are black\n    //     'black bg-white h4': !minor, // major keys are white\n    //   })}\n    //   style={{\n    //     // CSS\n    //     top: 0,\n    //     left: `${index * 2}rem`,\n    //     zIndex: minor ? 1 : 0,\n    //     width: minor ? '1.5rem' : '2rem',\n    //     marginLeft: minor ? '0.25rem' : 0,\n    //   }}\n    // ></div>\n    <div>\n      <button \n        onMouseDown={() => {\n          Polysynth?.triggerAttack(`${note}`);\n\n          // only add the note into a new song if recording button has been clicked\n          if(state.get('isRecording')) {\n            dispatch(new DispatchAction('ADD_NOTE_TO_SONG', {\n              note: note\n            }));\n          }\n        }} \n        onMouseUp={() => Polysynth?.triggerRelease(`${note}`,'+0.19')}\n        style={{\n              // CSS\n              // top: 0,\n              // left: `${index * 2}rem`,\n              // zIndex: minor ? 1 : 0,\n              // width: minor ? '1.5rem' : '2rem',\n              // marginLeft: minor ? '0.25rem' : 0,\n        }}>{identity}</button>\n    </div>\n  );\n}\n\n// eslint-disable-next-line\nfunction PianoKeyWithoutJSX({\n  note,\n  synth,\n  minor,\n  index,\n}: KulimbaKeyProps): JSX.Element {\n  /**\n   * This React component for pedagogical purposes.\n   * See `PianoKey` for the React component with JSX (JavaScript XML).\n   */\n  return React.createElement(\n    'div',\n    {\n      onMouseDown: () => synth?.triggerAttack(`${note}`),\n      onMouseUp: () => synth?.triggerRelease('+0.25'),\n      className: classNames('ba pointer absolute dim', {\n        'bg-black black h3': minor,\n        'black bg-white h4': !minor,\n      }),\n      style: {\n        top: 0,\n        left: `${index * 2}rem`,\n        zIndex: minor ? 1 : 0,\n        width: minor ? '1.5rem' : '2rem',\n        marginLeft: minor ? '0.25rem' : 0,\n      },\n    },\n    [],\n  );\n}\n\n/*function PianoType({ title, onClick, active }: any): JSX.Element {\n  return (\n    <div\n      onClick={onClick}\n      className={classNames('dim pointer ph2 pv1 ba mr2 br1 fw7 bw1', {\n        'b--black black': active,\n        'gray b--light-gray': !active,\n      })}\n    >\n      {title}\n    </div>\n  );\n}*/\n\nfunction Kalimba({ state, dispatch, synth }: InstrumentProps): JSX.Element {\n  const keys = List([\n    { note: \"G5\", idx: 0 },\n    { note: \"F5\", idx: 0.5 },\n    { note: \"E5\", idx: 1 },\n    { note: \"D5\", idx: 1.5 },\n    { note: \"B4\", idx: 2 },\n    { note: \"C5\", idx: 0 },\n    { note: \"D5\", idx: 0.5 },\n    { note: \"E5\", idx: 1 },\n    { note: \"F5\", idx: 1.5 },\n    // { note: 'E', idx: 2 },\n    // { note: 'F', idx: 3 },\n    // { note: 'Gb', idx: 3.5 },\n    // { note: 'G', idx: 4 },\n    // { note: 'Ab', idx: 4.5 },\n    // { note: 'A', idx: 5 },\n    // { note: 'Bb', idx: 5.5 },\n    // { note: 'B', idx: 6 },\n  ]);\n\n\n  // const setOscillator = (newType: Tone.ToneOscillatorType) => {\n  //   setSynth(oldSynth => {\n  //     oldSynth.disconnect();\n\n  //     return new Tone.Synth({\n  //       //oscillator: { type: newType } as Tone.OmniOscillatorOptions,\n        \n  //     }).toDestination();\n\n\n  //   });\n  // };\n\n  /*const oscillators: List<OscillatorType> = List([\n    'sine',\n    'sawtooth',\n    'square',\n    'triangle',\n    'fmsine',\n    'fmsawtooth',\n    'fmtriangle',\n    'amsine',\n    'amsawtooth',\n    'amtriangle',\n  ]) as List<OscillatorType>;*/\n\n  return (\n    <div className=\"pv5\">\n      <div className={'pl4 pt4 flex'}>\n        {/* {oscillators.map(o => (\n          <PianoType\n            key={o}\n            title={o}\n            onClick={() => setOscillator(o)}\n            active={synth?.oscillator.type === o}\n          />\n        ))} */}\n      </div>\n      <div className=\"Kalimba_main\">\n        <div style={{backgroundImage: 'url(\"https://cdn-icons-png.flaticon.com/512/3100/3100511.png\")', backgroundRepeat: 'no-repeat', right: '50px'}}>\n          <div style={{height: '500px', width: '320px'}}>\n            <div className=\"keys\" style={{margin: 'auto', width: '60%', padding: '30px', display: \"flex\"}}>\n\n             \n              {Range(1, 2).map(octave =>\n                keys.map(key => {\n                  const note = `${key.note}`;\n                  return (\n                    <PianoKey\n                      key={note} //react key\n                      note={note}\n                      synth={synth}\n                      octave={octave}\n                      identity={key.note}\n                      index={(octave - 2) * 7 + key.idx}\n                      state={state}\n                      dispatch={dispatch}\n                    />\n                  );\n                })\n              )} \n\n            </div> \n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport const KalimbaInstrument = new Instrument('kennethchuson2', Kalimba);\n\n\n"]},"metadata":{},"sourceType":"module"}