{"ast":null,"code":"// 3rd party library imports\nimport*as Tone from'tone';import classNames from'classnames';import{List,Range}from'immutable';import React from'react';// project imports\nimport{Instrument}from'../Instruments';import{DispatchAction}from'../Reducer';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Polysynth=new Tone.PolySynth().toDestination();Polysynth.set({detune:-1200});export function PianoKey(_ref){var note=_ref.note,identity=_ref.identity,state=_ref.state,dispatch=_ref.dispatch;/**\n   * This React component corresponds to either a major or minor key in the piano.\n   * See `PianoKeyWithoutJSX` for the React component without JSX.\n   */return/*#__PURE__*/ (// Observations:\n// 1. The JSX refers to the HTML-looking syntax within TypeScript.\n// 2. The JSX will be **transpiled** into the corresponding `React.createElement` library call.\n// 3. The curly braces `{` and `}` should remind you of string interpolation.\n// <div\n//   onMouseDown={() => synth?.triggerAttack(`${note}`)} // Question: what is `onMouseDown`?\n//   onMouseUp={() => synth?.triggerRelease('+0.25')} // Question: what is `onMouseUp`?\n//   className={classNames('ba pointer absolute dim', {\n//     'bg-black black h3': minor, // minor keys are black\n//     'black bg-white h4': !minor, // major keys are white\n//   })}\n//   style={{\n//     // CSS\n//     top: 0,\n//     left: `${index * 2}rem`,\n//     zIndex: minor ? 1 : 0,\n//     width: minor ? '1.5rem' : '2rem',\n//     marginLeft: minor ? '0.25rem' : 0,\n//   }}\n// ></div>\n_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"button\",{onMouseDown:function onMouseDown(){Polysynth===null||Polysynth===void 0?void 0:Polysynth.triggerAttack(\"\".concat(note));// only add the note into a new song if recording button has been clicked\nif(state.get('isRecording')){dispatch(new DispatchAction('ADD_NOTE_TO_SONG',{note:note}));}},onMouseUp:function onMouseUp(){return Polysynth===null||Polysynth===void 0?void 0:Polysynth.triggerRelease(\"\".concat(note),'+0.19');},style:{// CSS\n// top: 0,\n// left: `${index * 2}rem`,\n// zIndex: minor ? 1 : 0,\n// width: minor ? '1.5rem' : '2rem',\n// marginLeft: minor ? '0.25rem' : 0,\n},children:identity})}));}// eslint-disable-next-line\nfunction PianoKeyWithoutJSX(_ref2){var note=_ref2.note,synth=_ref2.synth,minor=_ref2.minor,index=_ref2.index;/**\n   * This React component for pedagogical purposes.\n   * See `PianoKey` for the React component with JSX (JavaScript XML).\n   */return/*#__PURE__*/React.createElement('div',{onMouseDown:function onMouseDown(){return synth===null||synth===void 0?void 0:synth.triggerAttack(\"\".concat(note));},onMouseUp:function onMouseUp(){return synth===null||synth===void 0?void 0:synth.triggerRelease('+0.25');},className:classNames('ba pointer absolute dim',{'bg-black black h3':minor,'black bg-white h4':!minor}),style:{top:0,left:\"\".concat(index*2,\"rem\"),zIndex:minor?1:0,width:minor?'1.5rem':'2rem',marginLeft:minor?'0.25rem':0}},[]);}/*function PianoType({ title, onClick, active }: any): JSX.Element {\n  return (\n    <div\n      onClick={onClick}\n      className={classNames('dim pointer ph2 pv1 ba mr2 br1 fw7 bw1', {\n        'b--black black': active,\n        'gray b--light-gray': !active,\n      })}\n    >\n      {title}\n    </div>\n  );\n}*/function Kalimba(_ref3){var state=_ref3.state,dispatch=_ref3.dispatch,synth=_ref3.synth;var keys=List([{note:\"G5\",idx:0},{note:\"F5\",idx:0.5},{note:\"E5\",idx:1},{note:\"D5\",idx:1.5},{note:\"B4\",idx:2},{note:\"C5\",idx:0},{note:\"D5\",idx:0.5},{note:\"E5\",idx:1},{note:\"F5\",idx:1.5}// { note: 'E', idx: 2 },\n// { note: 'F', idx: 3 },\n// { note: 'Gb', idx: 3.5 },\n// { note: 'G', idx: 4 },\n// { note: 'Ab', idx: 4.5 },\n// { note: 'A', idx: 5 },\n// { note: 'Bb', idx: 5.5 },\n// { note: 'B', idx: 6 },\n]);// const setOscillator = (newType: Tone.ToneOscillatorType) => {\n//   setSynth(oldSynth => {\n//     oldSynth.disconnect();\n//     return new Tone.Synth({\n//       //oscillator: { type: newType } as Tone.OmniOscillatorOptions,\n//     }).toDestination();\n//   });\n// };\n/*const oscillators: List<OscillatorType> = List([\n    'sine',\n    'sawtooth',\n    'square',\n    'triangle',\n    'fmsine',\n    'fmsawtooth',\n    'fmtriangle',\n    'amsine',\n    'amsawtooth',\n    'amtriangle',\n  ]) as List<OscillatorType>;*/return/*#__PURE__*/_jsxs(\"div\",{className:\"pv5\",children:[/*#__PURE__*/_jsx(\"div\",{className:'pl4 pt4 flex'}),/*#__PURE__*/_jsx(\"div\",{className:\"Kalimba_main\",children:/*#__PURE__*/_jsx(\"div\",{style:{backgroundImage:'url(\"https://cdn-icons-png.flaticon.com/512/3100/3100511.png\")',backgroundRepeat:'no-repeat',right:'50px'},children:/*#__PURE__*/_jsx(\"div\",{style:{height:'500px',width:'320px'},children:/*#__PURE__*/_jsx(\"div\",{className:\"keys\",style:{margin:'auto',width:'60%',padding:'30px',display:\"flex\"},children:Range(1,2).map(function(octave){return keys.map(function(key){var note=\"\".concat(key.note);return/*#__PURE__*/_jsx(PianoKey,{//react key\nnote:note,synth:synth,octave:octave,identity:key.note,index:(octave-2)*7+key.idx,state:state,dispatch:dispatch},note);});})})})})})]});}export var KalimbaInstrument=new Instrument('kennethchuson2',Kalimba);","map":{"version":3,"sources":["/Users/michaelschroeder/Documents/GitHub/final-project-symphony-quadtuplets/client/src/instruments/kennethchuson2.tsx"],"names":["Tone","classNames","List","Range","React","Instrument","DispatchAction","Polysynth","PolySynth","toDestination","set","detune","PianoKey","note","identity","state","dispatch","triggerAttack","get","triggerRelease","PianoKeyWithoutJSX","synth","minor","index","createElement","onMouseDown","onMouseUp","className","style","top","left","zIndex","width","marginLeft","Kalimba","keys","idx","backgroundImage","backgroundRepeat","right","height","margin","padding","display","map","octave","key","KalimbaInstrument"],"mappings":"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","sourcesContent":["// 3rd party library imports\nimport * as Tone from 'tone';\nimport classNames from 'classnames';\nimport { List, Range } from 'immutable';\nimport React from 'react';\n\n// project imports\nimport { Instrument, InstrumentProps } from '../Instruments';\nimport { DispatchAction } from '../Reducer';\nimport { AppState } from '../State';\n\n/** ------------------------------------------------------------------------ **\n * Contains implementation of components for Piano.\n ** ------------------------------------------------------------------------ */\n\ninterface KulimbaKeyProps {\n  note: string; // C, Db, D, Eb, E, F, Gb, G, Ab, A, Bb, B\n  duration?: string;\n  synth?: Tone.Synth; // Contains library code for making sound\n  minor?: boolean; // True if minor key, false if major key\n  identity: string; \n  octave: number;\n  index: number; // octave + index together give a location for the piano key\n  state: AppState;\n  dispatch: React.Dispatch<DispatchAction>;\n}\n\nconst Polysynth = new Tone.PolySynth().toDestination();\n\n\nPolysynth.set({\n  detune: -1200\n})\n\n\nexport function PianoKey({\n  note,\n  // synth,\n  // minor,\n  // index,\n  identity,\n  state,\n  dispatch\n}: KulimbaKeyProps): JSX.Element {\n  /**\n   * This React component corresponds to either a major or minor key in the piano.\n   * See `PianoKeyWithoutJSX` for the React component without JSX.\n   */\n\n  \n  return (\n    // Observations:\n    // 1. The JSX refers to the HTML-looking syntax within TypeScript.\n    // 2. The JSX will be **transpiled** into the corresponding `React.createElement` library call.\n    // 3. The curly braces `{` and `}` should remind you of string interpolation.\n    // <div\n    //   onMouseDown={() => synth?.triggerAttack(`${note}`)} // Question: what is `onMouseDown`?\n    //   onMouseUp={() => synth?.triggerRelease('+0.25')} // Question: what is `onMouseUp`?\n    //   className={classNames('ba pointer absolute dim', {\n    //     'bg-black black h3': minor, // minor keys are black\n    //     'black bg-white h4': !minor, // major keys are white\n    //   })}\n    //   style={{\n    //     // CSS\n    //     top: 0,\n    //     left: `${index * 2}rem`,\n    //     zIndex: minor ? 1 : 0,\n    //     width: minor ? '1.5rem' : '2rem',\n    //     marginLeft: minor ? '0.25rem' : 0,\n    //   }}\n    // ></div>\n    <div>\n      <button \n        onMouseDown={() => {\n          Polysynth?.triggerAttack(`${note}`);\n\n          // only add the note into a new song if recording button has been clicked\n          if(state.get('isRecording')) {\n            dispatch(new DispatchAction('ADD_NOTE_TO_SONG', {\n              note: note\n            }));\n          }\n        }} \n        onMouseUp={() => Polysynth?.triggerRelease(`${note}`,'+0.19')}\n        style={{\n              // CSS\n              // top: 0,\n              // left: `${index * 2}rem`,\n              // zIndex: minor ? 1 : 0,\n              // width: minor ? '1.5rem' : '2rem',\n              // marginLeft: minor ? '0.25rem' : 0,\n        }}>{identity}</button>\n    </div>\n  );\n}\n\n// eslint-disable-next-line\nfunction PianoKeyWithoutJSX({\n  note,\n  synth,\n  minor,\n  index,\n}: KulimbaKeyProps): JSX.Element {\n  /**\n   * This React component for pedagogical purposes.\n   * See `PianoKey` for the React component with JSX (JavaScript XML).\n   */\n  return React.createElement(\n    'div',\n    {\n      onMouseDown: () => synth?.triggerAttack(`${note}`),\n      onMouseUp: () => synth?.triggerRelease('+0.25'),\n      className: classNames('ba pointer absolute dim', {\n        'bg-black black h3': minor,\n        'black bg-white h4': !minor,\n      }),\n      style: {\n        top: 0,\n        left: `${index * 2}rem`,\n        zIndex: minor ? 1 : 0,\n        width: minor ? '1.5rem' : '2rem',\n        marginLeft: minor ? '0.25rem' : 0,\n      },\n    },\n    [],\n  );\n}\n\n/*function PianoType({ title, onClick, active }: any): JSX.Element {\n  return (\n    <div\n      onClick={onClick}\n      className={classNames('dim pointer ph2 pv1 ba mr2 br1 fw7 bw1', {\n        'b--black black': active,\n        'gray b--light-gray': !active,\n      })}\n    >\n      {title}\n    </div>\n  );\n}*/\n\nfunction Kalimba({ state, dispatch, synth }: InstrumentProps): JSX.Element {\n  const keys = List([\n    { note: \"G5\", idx: 0 },\n    { note: \"F5\", idx: 0.5 },\n    { note: \"E5\", idx: 1 },\n    { note: \"D5\", idx: 1.5 },\n    { note: \"B4\", idx: 2 },\n    { note: \"C5\", idx: 0 },\n    { note: \"D5\", idx: 0.5 },\n    { note: \"E5\", idx: 1 },\n    { note: \"F5\", idx: 1.5 },\n    // { note: 'E', idx: 2 },\n    // { note: 'F', idx: 3 },\n    // { note: 'Gb', idx: 3.5 },\n    // { note: 'G', idx: 4 },\n    // { note: 'Ab', idx: 4.5 },\n    // { note: 'A', idx: 5 },\n    // { note: 'Bb', idx: 5.5 },\n    // { note: 'B', idx: 6 },\n  ]);\n\n\n  // const setOscillator = (newType: Tone.ToneOscillatorType) => {\n  //   setSynth(oldSynth => {\n  //     oldSynth.disconnect();\n\n  //     return new Tone.Synth({\n  //       //oscillator: { type: newType } as Tone.OmniOscillatorOptions,\n        \n  //     }).toDestination();\n\n\n  //   });\n  // };\n\n  /*const oscillators: List<OscillatorType> = List([\n    'sine',\n    'sawtooth',\n    'square',\n    'triangle',\n    'fmsine',\n    'fmsawtooth',\n    'fmtriangle',\n    'amsine',\n    'amsawtooth',\n    'amtriangle',\n  ]) as List<OscillatorType>;*/\n\n  return (\n    <div className=\"pv5\">\n      <div className={'pl4 pt4 flex'}>\n        {/* {oscillators.map(o => (\n          <PianoType\n            key={o}\n            title={o}\n            onClick={() => setOscillator(o)}\n            active={synth?.oscillator.type === o}\n          />\n        ))} */}\n      </div>\n      <div className=\"Kalimba_main\">\n        <div style={{backgroundImage: 'url(\"https://cdn-icons-png.flaticon.com/512/3100/3100511.png\")', backgroundRepeat: 'no-repeat', right: '50px'}}>\n          <div style={{height: '500px', width: '320px'}}>\n            <div className=\"keys\" style={{margin: 'auto', width: '60%', padding: '30px', display: \"flex\"}}>\n\n             \n              {Range(1, 2).map(octave =>\n                keys.map(key => {\n                  const note = `${key.note}`;\n                  return (\n                    <PianoKey\n                      key={note} //react key\n                      note={note}\n                      synth={synth}\n                      octave={octave}\n                      identity={key.note}\n                      index={(octave - 2) * 7 + key.idx}\n                      state={state}\n                      dispatch={dispatch}\n                    />\n                  );\n                })\n              )} \n\n            </div> \n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport const KalimbaInstrument = new Instrument('kennethchuson2', Kalimba);\n\n\n"]},"metadata":{},"sourceType":"module"}