{"ast":null,"code":"var _jsxFileName = \"/Users/michaelschroeder/Documents/GitHub/final-project-symphony-quadtuplets/client/src/instruments/schrodobaggins.tsx\";\n// 3rd party library imports\nimport * as Tone from 'tone';\nimport classNames from 'classnames';\nimport { List } from 'immutable';\nimport React from 'react'; // project imports\n\nimport { Instrument } from '../Instruments';\nimport { DispatchAction } from '../Reducer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Monosynth = new Tone.MonoSynth().toDestination();\nexport function FluteKey(_ref) {\n  let {\n    note,\n    minor,\n    index,\n    state,\n    dispatch\n  } = _ref;\n\n  /**\n   * This React component corresponds to either a major or minor key in the piano.\n   * See `PianoKeyWithoutJSX` for the React component without JSX.\n   */\n  return (\n    /*#__PURE__*/\n    // Observations:\n    // 1. The JSX refers to the HTML-looking syntax within TypeScript.\n    // 2. The JSX will be **transpiled** into the corresponding `React.createElement` library call.\n    // 3. The curly braces `{` and `}` should remind you of string interpolation.\n    _jsxDEV(\"div\", {\n      onMouseDown: () => {\n        Monosynth === null || Monosynth === void 0 ? void 0 : Monosynth.triggerAttack(`${note}`); // only add the note into a new song if recording button has been clicked\n\n        if (state.get('isRecording')) {\n          dispatch(new DispatchAction('ADD_NOTE_TO_SONG', {\n            note: note\n          }));\n        }\n      } // Question: what is `onMouseDown`?\n      ,\n      onMouseUp: () => Monosynth === null || Monosynth === void 0 ? void 0 : Monosynth.triggerRelease('+0.32') // Question: what is `onMouseUp`?\n      ,\n      className: classNames('ba pointer absolute dim', {\n        'black bg-white h4': !minor // major keys are white\n\n      }),\n      style: {\n        // CSS\n        top: 6,\n        left: `${index * 5}rem`,\n        zIndex: minor ? 4 : 2,\n        width: minor ? '2rem' : '5rem',\n        height: minor ? '2rem' : '5rem',\n        borderRadius: 88 / 2,\n        marginLeft: minor ? '0.25rem' : 25\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }, this)\n  );\n}\n_c = FluteKey;\n\nfunction Flute(_ref2) {\n  let {\n    state,\n    dispatch,\n    synth\n  } = _ref2;\n  const flute = List([[{\n    note: 'Ab',\n    octave: 6,\n    idx: 9\n  }, {\n    note: 'Db',\n    octave: 6,\n    idx: 1\n  }, {\n    note: 'F',\n    octave: 6,\n    idx: 2\n  }, {\n    note: 'Bb',\n    octave: 4,\n    idx: 3\n  }], [{\n    note: 'A',\n    octave: 4,\n    idx: 4\n  }, {\n    note: 'D',\n    octave: 4,\n    idx: 5\n  }, {\n    note: 'Gb',\n    octave: 6,\n    idx: 6\n  }, {\n    note: 'B',\n    octave: 6,\n    idx: 7\n  }], [{\n    note: 'Bb',\n    octave: 6,\n    idx: 8\n  }, {\n    note: 'Eb',\n    octave: 6,\n    idx: 9\n  } // { note: 'G', octave: 4, idx: 10 }, \n  // { note: 'C', octave: 4, idx: 11 }\n  ]]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"pv4\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"relative dib h4 w-50\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flute\",\n        children: [flute.map(blow => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"blow\",\n          children: blow.map(blow => {\n            const note = `${blow.note}${blow.octave}`;\n            return /*#__PURE__*/_jsxDEV(FluteKey, {\n              note: note,\n              synth: synth,\n              index: blow.idx,\n              state: state,\n              dispatch: dispatch\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 21\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 15\n        }, this)), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"https://upload.wikimedia.org/wikipedia/commons/thumb/a/a8/Pan_flute.svg/868px-Pan_flute.svg.png\",\n          alt: \"Pan\",\n          style: {\n            margin: \"10px\",\n            width: \"650px\",\n            borderRadius: \"30px\",\n            objectFit: \"scale-down\",\n            marginBottom: \"15px\",\n            alignSelf: 'center'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: 'pl4 pt4 flex'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 5\n  }, this);\n}\n\n_c2 = Flute;\nexport const FluteInstrument = new Instrument('schrodobaggins', Flute);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"FluteKey\");\n$RefreshReg$(_c2, \"Flute\");","map":{"version":3,"sources":["/Users/michaelschroeder/Documents/GitHub/final-project-symphony-quadtuplets/client/src/instruments/schrodobaggins.tsx"],"names":["Tone","classNames","List","React","Instrument","DispatchAction","Monosynth","MonoSynth","toDestination","FluteKey","note","minor","index","state","dispatch","triggerAttack","get","triggerRelease","top","left","zIndex","width","height","borderRadius","marginLeft","Flute","synth","flute","octave","idx","map","blow","margin","objectFit","marginBottom","alignSelf","FluteInstrument"],"mappings":"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","sourcesContent":["// 3rd party library imports\nimport * as Tone from 'tone';\nimport classNames from 'classnames';\nimport { List } from 'immutable';\nimport React from 'react';\n\n// project imports\nimport { Instrument, InstrumentProps } from '../Instruments';\nimport { DispatchAction } from '../Reducer';\nimport { AppState } from '../State';\n\n/** ------------------------------------------------------------------------ **\n * Contains implementation of components for Piano.\n ** ------------------------------------------------------------------------ */\n\ninterface FluteKeyProps {\n  note: string; \n  duration?: string;\n  synth?: Tone.Synth; // Contains library code for making sound\n  minor?: boolean; // True if minor key, false if major key\n  index: number; // octave + index together give a location for the piano key\n  state: AppState;\n  dispatch: React.Dispatch<DispatchAction>;\n}\n\nconst Monosynth = new Tone.MonoSynth().toDestination();\n\nexport function FluteKey({\n  note,\n  minor,\n  index,\n  state,\n  dispatch\n}: FluteKeyProps): JSX.Element {\n  /**\n   * This React component corresponds to either a major or minor key in the piano.\n   * See `PianoKeyWithoutJSX` for the React component without JSX.\n   */\n  return (\n    // Observations:\n    // 1. The JSX refers to the HTML-looking syntax within TypeScript.\n    // 2. The JSX will be **transpiled** into the corresponding `React.createElement` library call.\n    // 3. The curly braces `{` and `}` should remind you of string interpolation.\n    <div\n      onMouseDown={() => {\n        Monosynth?.triggerAttack(`${note}`);\n\n        // only add the note into a new song if recording button has been clicked\n        if(state.get('isRecording')) {\n          dispatch(new DispatchAction('ADD_NOTE_TO_SONG', {\n            note: note\n          }));\n        }\n      }} // Question: what is `onMouseDown`?\n      onMouseUp={() => Monosynth?.triggerRelease('+0.32')} // Question: what is `onMouseUp`?\n      className={classNames('ba pointer absolute dim', {\n        'black bg-white h4': !minor, // major keys are white\n      })}\n      style={{\n        // CSS\n        top: 6,\n        left: `${index * 5}rem`,\n        zIndex: minor ? 4 : 2,\n        width: minor ? '2rem' : '5rem',\n        height: minor ? '2rem' : '5rem',\n        borderRadius: 88/2,\n        marginLeft: minor ? '0.25rem' : 25,\n      }}\n    >\n   </div>\n  );\n}\n\nfunction Flute({ state, dispatch, synth }: InstrumentProps): JSX.Element {\n\n  const flute = List([\n    [{ note: 'Ab', octave: 6, idx: 9 }, \n    { note: 'Db', octave: 6, idx: 1 }, \n    { note: 'F', octave: 6, idx: 2 }, \n    { note: 'Bb', octave: 4, idx: 3 }],\n    [{ note: 'A', octave: 4, idx: 4 }, \n    { note: 'D', octave: 4, idx: 5 }, \n    { note: 'Gb', octave: 6, idx: 6 }, \n    { note: 'B', octave: 6, idx: 7 }],\n    [{ note: 'Bb', octave: 6, idx: 8 }, \n    { note: 'Eb', octave: 6, idx: 9 }, \n    // { note: 'G', octave: 4, idx: 10 }, \n    // { note: 'C', octave: 4, idx: 11 }\n  ]\n  ]);\n\n  return (\n    <div className=\"pv4\">\n      <div className=\"relative dib h4 w-50\">\n        <div className=\"flute\">\n          {flute.map(blow => (\n              <div className=\"blow\">\n                {blow.map(blow => {\n                  const note = `${blow.note}${blow.octave}`;\n                  return (\n                    <FluteKey \n                      note={note}\n                      synth={synth}\n                      index={blow.idx}\n                      state={state}\n                      dispatch={dispatch}\n                    />\n                  );\n                })}\n              </div>\n            ))\n          }\n          <img\n     src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/a/a8/Pan_flute.svg/868px-Pan_flute.svg.png\"\n     alt=\"Pan\"\n     style={{\n       margin: \"10px\",\n       width: \"650px\",\n       borderRadius: \"30px\",\n       objectFit: \"scale-down\",\n       marginBottom: \"15px\",\n       alignSelf: 'center'\n       \n     }}\n   />\n        </div> \n        <div className={'pl4 pt4 flex'}>\n          </div>\n      </div>   \n      </div> \n  );\n}\n\nexport const FluteInstrument = new Instrument('schrodobaggins', Flute);"]},"metadata":{},"sourceType":"module"}