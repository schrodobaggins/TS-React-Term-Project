{"ast":null,"code":"import _classCallCheck from\"/Users/michaelschroeder/Documents/GitHub/final-project-symphony-quadtuplets/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";// 3rd party library imports\nimport*as Tone from'tone';import Sketch from'react-p5';import{useEffect,useMemo,useCallback}from'react';//import mandelbrot_set from './img/mandelbrot_set.png';\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export var Visualizer=function Visualizer(name,draw){_classCallCheck(this,Visualizer);this.name=void 0;this.draw=void 0;this.name=name;this.draw=draw;};export function VisualizerContainer(_ref){var visualizer=_ref.visualizer;var name=visualizer.name,_draw=visualizer.draw;var setCircumference=name===\"Circumference\"?true:false;var analyzer=useMemo(function(){return new Tone.Analyser('waveform',256);},[]);var onResize=useCallback(function(p5){var width=window.innerWidth;var height=window.innerHeight/2;p5.resizeCanvas(width,height,false);},[]);useEffect(function(){Tone.getDestination().volume.value=-5;Tone.getDestination().connect(analyzer);return function(){Tone.getDestination().disconnect(analyzer);};},[analyzer]);var setup=function setup(p5,canvasParentRef){var width=setCircumference?window.innerWidth/2:window.innerWidth;var height=setCircumference?window.innerHeight:window.innerHeight/2;p5.createCanvas(width,height).parent(canvasParentRef);p5.angleMode(p5.DEGREES);};return/*#__PURE__*/_jsxs(\"div\",{className:setCircumference?'bg-grey absolute right-0 h-100 w-50':'bg-black absolute bottom-0 right-0 left-0 h-50',children:[/*#__PURE__*/_jsx(\"div\",{className:'z-1 absolute left-0 top-0 pa4 white f5',children:name}),/*#__PURE__*/_jsx(Sketch,{setup:setup,draw:function draw(p5){return _draw(p5,analyzer);},windowResized:onResize,className:setCircumference?'circumference-visualizer':''})]});}","map":{"version":3,"sources":["/Users/michaelschroeder/Documents/GitHub/final-project-symphony-quadtuplets/client/src/Visualizers.tsx"],"names":["Tone","Sketch","useEffect","useMemo","useCallback","Visualizer","name","draw","VisualizerContainer","visualizer","setCircumference","analyzer","Analyser","onResize","p5","width","window","innerWidth","height","innerHeight","resizeCanvas","getDestination","volume","value","connect","disconnect","setup","canvasParentRef","createCanvas","parent","angleMode","DEGREES"],"mappings":"2MAAA;AACA,MAAO,GAAKA,CAAAA,IAAZ,KAAsB,MAAtB,CACA,MAAOC,CAAAA,MAAP,KAAmB,UAAnB,CAEA,OAASC,SAAT,CAAoBC,OAApB,CAA6BC,WAA7B,KAAgD,OAAhD,CACA;wFAQA,UAAaC,CAAAA,UAAb,CAIE,oBAAYC,IAAZ,CAA0BC,IAA1B,CAAkD,uCAHlCD,IAGkC,aAFlCC,IAEkC,QAChD,KAAKD,IAAL,CAAYA,IAAZ,CACA,KAAKC,IAAL,CAAYA,IAAZ,CACD,CAPH,CAUA,MAAO,SAASC,CAAAA,mBAAT,MAAuE,IAAxCC,CAAAA,UAAwC,MAAxCA,UAAwC,CAE5E,GAAQH,CAAAA,IAAR,CAAuBG,UAAvB,CAAQH,IAAR,CAAcC,KAAd,CAAuBE,UAAvB,CAAcF,IAAd,CAEA,GAAIG,CAAAA,gBAAgB,CAAIJ,IAAI,GAAK,eAAV,CAA6B,IAA7B,CAAoC,KAA3D,CAEA,GAAMK,CAAAA,QAAuB,CAAGR,OAAO,CACrC,iBAAM,IAAIH,CAAAA,IAAI,CAACY,QAAT,CAAkB,UAAlB,CAA8B,GAA9B,CAAN,EADqC,CAErC,EAFqC,CAAvC,CAKA,GAAMC,CAAAA,QAAQ,CAAGT,WAAW,CAAC,SAACU,EAAD,CAAY,CACvC,GAAMC,CAAAA,KAAK,CAAGC,MAAM,CAACC,UAArB,CACA,GAAMC,CAAAA,MAAM,CAAGF,MAAM,CAACG,WAAP,CAAqB,CAApC,CAEAL,EAAE,CAACM,YAAH,CAAgBL,KAAhB,CAAuBG,MAAvB,CAA+B,KAA/B,EACD,CAL2B,CAKzB,EALyB,CAA5B,CAOAhB,SAAS,CAAC,UAAM,CACdF,IAAI,CAACqB,cAAL,GAAsBC,MAAtB,CAA6BC,KAA7B,CAAqC,CAAC,CAAtC,CACAvB,IAAI,CAACqB,cAAL,GAAsBG,OAAtB,CAA8Bb,QAA9B,EACA,MAAO,WAAM,CACXX,IAAI,CAACqB,cAAL,GAAsBI,UAAtB,CAAiCd,QAAjC,EACD,CAFD,CAGD,CANQ,CAMN,CAACA,QAAD,CANM,CAAT,CAQA,GAAMe,CAAAA,KAAK,CAAG,QAARA,CAAAA,KAAQ,CAACZ,EAAD,CAASa,eAAT,CAAsC,CAClD,GAAMZ,CAAAA,KAAK,CAAIL,gBAAD,CAAqBM,MAAM,CAACC,UAAP,CAAoB,CAAzC,CAA6CD,MAAM,CAACC,UAAlE,CACA,GAAMC,CAAAA,MAAM,CAAIR,gBAAD,CAAqBM,MAAM,CAACG,WAA5B,CAA0CH,MAAM,CAACG,WAAP,CAAqB,CAA9E,CACAL,EAAE,CAACc,YAAH,CAAgBb,KAAhB,CAAuBG,MAAvB,EAA+BW,MAA/B,CAAsCF,eAAtC,EACAb,EAAE,CAACgB,SAAH,CAAahB,EAAE,CAACiB,OAAhB,EACD,CALD,CAOA,mBACE,aAAK,SAAS,CAAErB,gBAAgB,CAAG,qCAAH,CAA2C,gDAA3E,wBACE,YAAK,SAAS,CAAE,wCAAhB,UAA2DJ,IAA3D,EADF,cAEE,KAAC,MAAD,EACE,KAAK,CAAEoB,KADT,CAEE,IAAI,CAAE,cAAAZ,EAAE,QAAIP,CAAAA,KAAI,CAACO,EAAD,CAAKH,QAAL,CAAR,EAFV,CAGE,aAAa,CAAEE,QAHjB,CAIE,SAAS,CAAEH,gBAAgB,CAAG,0BAAH,CAAgC,EAJ7D,EAFF,GADF,CAWD","sourcesContent":["// 3rd party library imports\nimport * as Tone from 'tone';\nimport Sketch from 'react-p5';\nimport P5 from 'p5';\nimport { useEffect, useMemo, useCallback } from 'react';\n//import mandelbrot_set from './img/mandelbrot_set.png';\n\ntype VisualizerDrawer = (p5: P5, analyzer: Tone.Analyser) => void;\n\ninterface VisualizerContainerProps {\n  visualizer: Visualizer;\n}\n\nexport class Visualizer {\n  public readonly name: string;\n  public readonly draw: VisualizerDrawer;\n\n  constructor(name: string, draw: VisualizerDrawer) {\n    this.name = name;\n    this.draw = draw;\n  }\n}\n\nexport function VisualizerContainer({ visualizer }: VisualizerContainerProps) {\n\n  const { name, draw } = visualizer;\n\n  let setCircumference = (name === \"Circumference\") ? true : false;\n\n  const analyzer: Tone.Analyser = useMemo(\n    () => new Tone.Analyser('waveform', 256),\n    [],\n  );\n\n  const onResize = useCallback((p5: P5) => {\n    const width = window.innerWidth;\n    const height = window.innerHeight / 2;\n\n    p5.resizeCanvas(width, height, false);\n  }, []);\n\n  useEffect(() => {\n    Tone.getDestination().volume.value = -5;\n    Tone.getDestination().connect(analyzer);\n    return () => {\n      Tone.getDestination().disconnect(analyzer);\n    };\n  }, [analyzer]);\n\n  const setup = (p5: P5, canvasParentRef: Element) => {\n    const width = (setCircumference) ? window.innerWidth / 2 : window.innerWidth;\n    const height = (setCircumference) ? window.innerHeight : window.innerHeight / 2; \n    p5.createCanvas(width, height).parent(canvasParentRef);\n    p5.angleMode(p5.DEGREES);\n  };\n\n  return (\n    <div className={setCircumference ? 'bg-grey absolute right-0 h-100 w-50' : 'bg-black absolute bottom-0 right-0 left-0 h-50'}>\n      <div className={'z-1 absolute left-0 top-0 pa4 white f5'}>{name}</div>\n      <Sketch\n        setup={setup}\n        draw={p5 => draw(p5, analyzer)}\n        windowResized={onResize}\n        className={setCircumference ? 'circumference-visualizer' : ''}\n      />\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}