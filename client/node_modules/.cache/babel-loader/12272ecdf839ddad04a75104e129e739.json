{"ast":null,"code":"import _regeneratorRuntime from\"/Users/michaelschroeder/Documents/GitHub/final-project-symphony-quadtuplets/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/michaelschroeder/Documents/GitHub/final-project-symphony-quadtuplets/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import{DispatchAction}from'../Reducer';import axios from'axios';export var getSongs=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch){var res;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;_context.next=3;return axios.get('/api/songs',{headers:{'Content-Type':'application/json'}});case 3:res=_context.sent;if(res.status===200){dispatch(new DispatchAction('SET_SONGS',{songs:res.data.songs}));}_context.next=10;break;case 7:_context.prev=7;_context.t0=_context[\"catch\"](0);console.error(_context.t0);case 10:case\"end\":return _context.stop();}}},_callee,null,[[0,7]]);}));return function getSongs(_x){return _ref.apply(this,arguments);};}();export var getSong=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(dispatch,songTitle){var res;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.prev=0;_context2.next=3;return axios.get(\"/api/songs/\".concat(songTitle),{headers:{'Content-Type':'application/json'}});case 3:res=_context2.sent;if(res.status===200){dispatch(new DispatchAction('SET_SONGS',{songs:res.data.songs}));}_context2.next=10;break;case 7:_context2.prev=7;_context2.t0=_context2[\"catch\"](0);console.error(_context2.t0);case 10:case\"end\":return _context2.stop();}}},_callee2,null,[[0,7]]);}));return function getSong(_x2,_x3){return _ref2.apply(this,arguments);};}();export var updateSong=/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(dispatch,newTitle,songId){var res;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_context3.prev=0;_context3.next=3;return axios.put(\"/api/songs/\".concat(songId),null,{params:{newTitle:newTitle}});case 3:res=_context3.sent;if(!(res.status===200)){_context3.next=7;break;}_context3.next=7;return getSongs(dispatch);case 7:_context3.next=12;break;case 9:_context3.prev=9;_context3.t0=_context3[\"catch\"](0);console.error(_context3.t0);case 12:case\"end\":return _context3.stop();}}},_callee3,null,[[0,9]]);}));return function updateSong(_x4,_x5,_x6){return _ref3.apply(this,arguments);};}();export var addSong=/*#__PURE__*/function(){var _ref4=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee4(dispatch,songTitle,song){var body,res;return _regeneratorRuntime.wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:_context4.prev=0;body={song_title:songTitle,song:song};_context4.next=4;return axios.post('/api/songs',body,{headers:{'Content-Type':'application/json'}});case 4:res=_context4.sent;if(!(res.status===201)){_context4.next=8;break;}_context4.next=8;return getSongs(dispatch);case 8:_context4.next=13;break;case 10:_context4.prev=10;_context4.t0=_context4[\"catch\"](0);console.error(_context4.t0);case 13:case\"end\":return _context4.stop();}}},_callee4,null,[[0,10]]);}));return function addSong(_x7,_x8,_x9){return _ref4.apply(this,arguments);};}();export var deleteSong=/*#__PURE__*/function(){var _ref5=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee5(dispatch,songId){var res;return _regeneratorRuntime.wrap(function _callee5$(_context5){while(1){switch(_context5.prev=_context5.next){case 0:_context5.prev=0;_context5.next=3;return axios.delete(\"/api/songs/\".concat(songId));case 3:res=_context5.sent;if(!(res.status===200)){_context5.next=7;break;}_context5.next=7;return getSongs(dispatch);case 7:_context5.next=12;break;case 9:_context5.prev=9;_context5.t0=_context5[\"catch\"](0);console.error(_context5.t0);case 12:case\"end\":return _context5.stop();}}},_callee5,null,[[0,9]]);}));return function deleteSong(_x10,_x11){return _ref5.apply(this,arguments);};}();","map":{"version":3,"sources":["/Users/michaelschroeder/Documents/GitHub/final-project-symphony-quadtuplets/client/src/utils/apiCreators.ts"],"names":["DispatchAction","axios","getSongs","dispatch","get","headers","res","status","songs","data","console","error","getSong","songTitle","updateSong","newTitle","songId","put","params","addSong","song","body","song_title","post","deleteSong","delete"],"mappings":"+YAAA,OAASA,cAAT,KAA+B,YAA/B,CACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,CAGA,MAAO,IAAMC,CAAAA,QAAQ,0FAAG,iBAAOC,QAAP,gKAEEF,CAAAA,KAAK,CAACG,GAAN,CAAU,YAAV,CAAwB,CACtCC,OAAO,CAAE,CACL,eAAgB,kBADX,CAD6B,CAAxB,CAFF,QAEVC,GAFU,eAQhB,GAAGA,GAAG,CAACC,MAAJ,GAAe,GAAlB,CAAuB,CACnBJ,QAAQ,CAAC,GAAIH,CAAAA,cAAJ,CAAmB,WAAnB,CAAgC,CAAEQ,KAAK,CAAEF,GAAG,CAACG,IAAJ,CAASD,KAAlB,CAAhC,CAAD,CAAR,CACH,CAVe,+EAahBE,OAAO,CAACC,KAAR,cAbgB,oEAAH,kBAART,CAAAA,QAAQ,4CAAd,CAiBP,MAAO,IAAMU,CAAAA,OAAO,2FAAG,kBAAOT,QAAP,CACOU,SADP,sKAGGZ,CAAAA,KAAK,CAACG,GAAN,sBAAwBS,SAAxB,EAAqC,CACnDR,OAAO,CAAE,CACL,eAAgB,kBADX,CAD0C,CAArC,CAHH,QAGTC,GAHS,gBASf,GAAGA,GAAG,CAACC,MAAJ,GAAe,GAAlB,CAAuB,CACnBJ,QAAQ,CAAC,GAAIH,CAAAA,cAAJ,CAAmB,WAAnB,CAAgC,CAAEQ,KAAK,CAAEF,GAAG,CAACG,IAAJ,CAASD,KAAlB,CAAhC,CAAD,CAAR,CACH,CAXc,mFAcjBE,OAAO,CAACC,KAAR,eAdiB,sEAAH,kBAAPC,CAAAA,OAAO,kDAAb,CAkBP,MAAO,IAAME,CAAAA,UAAU,2FAAG,kBAAMX,QAAN,CACMY,QADN,CAEMC,MAFN,sKAIAf,CAAAA,KAAK,CAACgB,GAAN,sBAAwBD,MAAxB,EAAkC,IAAlC,CAAwC,CAAEE,MAAM,CAAE,CAAEH,QAAQ,CAAEA,QAAZ,CAAV,CAAxC,CAJA,QAIZT,GAJY,qBAMfA,GAAG,CAACC,MAAJ,GAAe,GANA,kDAORL,CAAAA,QAAQ,CAACC,QAAD,CAPA,2FAWlBO,OAAO,CAACC,KAAR,eAXkB,sEAAH,kBAAVG,CAAAA,UAAU,sDAAhB,CAeP,MAAO,IAAMK,CAAAA,OAAO,2FAAG,kBAAOhB,QAAP,CACOU,SADP,CAEOO,IAFP,oJAITC,IAJS,CAIF,CACTC,UAAU,CAAET,SADH,CAETO,IAAI,CAAEA,IAFG,CAJE,wBASGnB,CAAAA,KAAK,CAACsB,IAAN,CAAW,YAAX,CAAyBF,IAAzB,CAA+B,CAC7ChB,OAAO,CAAE,CACL,eAAgB,kBADX,CADoC,CAA/B,CATH,QASTC,GATS,qBAgBZA,GAAG,CAACC,MAAJ,GAAe,GAhBH,kDAiBLL,CAAAA,QAAQ,CAACC,QAAD,CAjBH,6FAqBfO,OAAO,CAACC,KAAR,eArBe,uEAAH,kBAAPQ,CAAAA,OAAO,sDAAb,CAyBP,MAAO,IAAMK,CAAAA,UAAU,2FAAG,kBAAMrB,QAAN,CACMa,MADN,sKAGAf,CAAAA,KAAK,CAACwB,MAAN,sBAA2BT,MAA3B,EAHA,QAGZV,GAHY,qBAKfA,GAAG,CAACC,MAAJ,GAAe,GALA,kDAMZL,CAAAA,QAAQ,CAACC,QAAD,CANI,2FAUlBO,OAAO,CAACC,KAAR,eAVkB,sEAAH,kBAAVa,CAAAA,UAAU,oDAAhB","sourcesContent":["import { DispatchAction } from '../Reducer';\nimport axios from 'axios';\nimport React from 'react';\n\nexport const getSongs = async (dispatch: React.Dispatch<DispatchAction>) => {\n    try {\n        const res = await axios.get('/api/songs', {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        });    \n\n        if(res.status === 200) {\n            dispatch(new DispatchAction('SET_SONGS', { songs: res.data.songs }));\n        }\n    }\n    catch(err) {\n        console.error(err);\n    }\n};\n\nexport const getSong = async (dispatch: React.Dispatch<DispatchAction>,\n                              songTitle: string) => {\n    try {\n        const res = await axios.get(`/api/songs/${songTitle}`, {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        });\n      \n        if(res.status === 200) {\n            dispatch(new DispatchAction('SET_SONGS', { songs: res.data.songs }));\n        }\n    }\n    catch(err) {\n      console.error(err);\n    }\n};\n\nexport const updateSong = async(dispatch: React.Dispatch<DispatchAction>,\n                                newTitle: string,\n                                songId: number) => {\n    try {\n        const res = await axios.put(`/api/songs/${songId}`, null, { params: { newTitle: newTitle } });\n\n        if(res.status === 200) {\n            await getSongs(dispatch);\n        }\n    }\n    catch(err) {\n        console.error(err);\n    }\n};\n\nexport const addSong = async (dispatch: React.Dispatch<DispatchAction>, \n                              songTitle: string, \n                              song: string[]) => {\n    try {\n        const body = {\n            song_title: songTitle,\n            song: song,  \n        };\n\n        const res = await axios.post('/api/songs', body, {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        });\n        \n        // successful creation of new song\n        if(res.status === 201) {\n            await getSongs(dispatch);\n        }\n    }\n    catch(err) {\n        console.error(err);\n    }\n};\n\nexport const deleteSong = async(dispatch: React.Dispatch<DispatchAction>,\n                                songId: number) => {\n    try {\n        const res = await axios.delete(`/api/songs/${songId}`);\n\n        if(res.status === 200) {\n        await getSongs(dispatch);\n        }\n    }\n    catch(err) {\n        console.error(err);\n    }\n};"]},"metadata":{},"sourceType":"module"}