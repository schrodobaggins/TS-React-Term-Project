{"ast":null,"code":"// 3rd party library imports\n// project imports\nimport { Visualizer } from '../Visualizers';\nvar mapMax = 1.0; //var amplitude;\n\nexport const MichaelWaveformVisualizer = new Visualizer('Schrodobaggins', (p5, analyzer) => {\n  const width = window.innerWidth;\n  const height = window.innerHeight / 2; //amplitude = new p5.Amplitude();\n\n  p5.background(0);\n  p5.fill(255);\n  p5.noStroke(); //p5.Amplitude();\n\n  const values = analyzer.getValue();\n  p5.text('Amplitude: ' + values, 30, 65);\n  p5.text('mapMax: ' + mapMax, 30, 80);\n  p5.beginShape();\n\n  for (let i = 0; i < values.length; i++) {\n    const amplitude = values[i]; //var level = amplitude.getLevel();\n    // map ellipse height\n\n    var ellipseHeight = p5.map(amplitude * 1.25, 0.50, values.length / 50, height, width);\n    p5.ellipse(width / 2, ellipseHeight, 50, 50);\n  }\n\n  p5.endShape();\n});","map":{"version":3,"sources":["/Users/michaelschroeder/Documents/GitHub/final-project-symphony-quadtuplets/client/src/visualizers/MichaelWaveform.tsx"],"names":["Visualizer","mapMax","MichaelWaveformVisualizer","p5","analyzer","width","window","innerWidth","height","innerHeight","background","fill","noStroke","values","getValue","text","beginShape","i","length","amplitude","ellipseHeight","map","ellipse","endShape"],"mappings":"AAAA;AAIA;AACA,SAASA,UAAT,QAA2B,gBAA3B;AAEA,IAAIC,MAAM,GAAG,GAAb,C,CACA;;AAEA,OAAO,MAAMC,yBAAyB,GAAG,IAAIF,UAAJ,CACvC,gBADuC,EAEvC,CAACG,EAAD,EAASC,QAAT,KAAqC;AACnC,QAAMC,KAAK,GAAGC,MAAM,CAACC,UAArB;AACA,QAAMC,MAAM,GAAGF,MAAM,CAACG,WAAP,GAAqB,CAApC,CAFmC,CAInC;;AACAN,EAAAA,EAAE,CAACO,UAAH,CAAc,CAAd;AACAP,EAAAA,EAAE,CAACQ,IAAH,CAAQ,GAAR;AACAR,EAAAA,EAAE,CAACS,QAAH,GAPmC,CAQnC;;AAGA,QAAMC,MAAM,GAAGT,QAAQ,CAACU,QAAT,EAAf;AACAX,EAAAA,EAAE,CAACY,IAAH,CAAQ,gBAAgBF,MAAxB,EAAgC,EAAhC,EAAoC,EAApC;AACAV,EAAAA,EAAE,CAACY,IAAH,CAAQ,aAAad,MAArB,EAA6B,EAA7B,EAAiC,EAAjC;AACAE,EAAAA,EAAE,CAACa,UAAH;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGJ,MAAM,CAACK,MAA3B,EAAmCD,CAAC,EAApC,EAAwC;AACpC,UAAME,SAAS,GAAGN,MAAM,CAACI,CAAD,CAAxB,CADoC,CAEpC;AAEA;;AACA,QAAIG,aAAa,GAAGjB,EAAE,CAACkB,GAAH,CAAOF,SAAS,GAAG,IAAnB,EAAyB,IAAzB,EAA+BN,MAAM,CAACK,MAAP,GAAgB,EAA/C,EAAmDV,MAAnD,EAA2DH,KAA3D,CAApB;AACAF,IAAAA,EAAE,CAACmB,OAAH,CAAWjB,KAAK,GAAG,CAAnB,EAAsBe,aAAtB,EAAqC,EAArC,EAAyC,EAAzC;AACH;;AACDjB,EAAAA,EAAE,CAACoB,QAAH;AACH,CA1BwC,CAAlC","sourcesContent":["// 3rd party library imports\nimport P5 from 'p5';\nimport * as Tone from 'tone';\n\n// project imports\nimport { Visualizer } from '../Visualizers';\n\nvar mapMax = 1.0;\n//var amplitude;\n\nexport const MichaelWaveformVisualizer = new Visualizer(\n  'Schrodobaggins',\n  (p5: P5, analyzer: Tone.Analyser) => {\n    const width = window.innerWidth;\n    const height = window.innerHeight / 2;\n\n    //amplitude = new p5.Amplitude();\n    p5.background(0);\n    p5.fill(255);\n    p5.noStroke();\n    //p5.Amplitude();\n\n    \n    const values = analyzer.getValue();\n    p5.text('Amplitude: ' + values, 30, 65);\n    p5.text('mapMax: ' + mapMax, 30, 80);\n    p5.beginShape();\n    for (let i = 0; i < values.length; i++) {\n        const amplitude = values[i] as number;\n        //var level = amplitude.getLevel();\n\n        // map ellipse height\n        var ellipseHeight = p5.map(amplitude * 1.25, 0.50, values.length / 50, height, width);\n        p5.ellipse(width / 2, ellipseHeight, 50, 50);\n    }\n    p5.endShape();\n},\n);\n\n\n"]},"metadata":{},"sourceType":"module"}